[2017-06-15 16:05:52,857/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Write merged log4j config file to /Users/zhenghaibo/git/samples/pojo-sample/target/classes/config/merged.log4j.properties io.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:102)
[2017-06-15 16:05:52,926/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@53cbc712: startup date [Thu Jun 15 16:05:52 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2017-06-15 16:05:52,966/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/java-chassis-core/0.1.0-m2-SNAPSHOT/java-chassis-core-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:05:53,288/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-common/0.1.0-m2-SNAPSHOT/foundation-common-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:05:53,306/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-config/0.1.0-m2-SNAPSHOT/foundation-config-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:05:53,322/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-metrics/0.1.0-m2-SNAPSHOT/foundation-metrics-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:05:53,335/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-vertx/0.1.0-m2-SNAPSHOT/foundation-vertx-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:05:53,351/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/transport-rest-client/0.1.0-m2-SNAPSHOT/transport-rest-client-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:05:53,512/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/java-chassis-core/0.1.0-m2-SNAPSHOT/java-chassis-core-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:05:53,617/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-common/0.1.0-m2-SNAPSHOT/foundation-common-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:05:53,627/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-config/0.1.0-m2-SNAPSHOT/foundation-config-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:05:53,635/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-metrics/0.1.0-m2-SNAPSHOT/foundation-metrics-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:05:53,643/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-vertx/0.1.0-m2-SNAPSHOT/foundation-vertx-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:05:53,651/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/transport-rest-client/0.1.0-m2-SNAPSHOT/transport-rest-client-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:05:53,770/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2017-06-15 16:05:53,771/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2017-06-15 16:05:53,845/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]config center URL is missing, skip to load configuration from config center io.servicecomb.config.ConfigurationSpringInitializer.<init>(ConfigurationSpringInitializer.java:80)
[2017-06-15 16:05:53,855/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][WARN]Configuration installed by others, will ignore this configuration. io.servicecomb.config.ConfigurationSpringInitializer.<init>(ConfigurationSpringInitializer.java:46)
[2017-06-15 16:05:54,181/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2017-06-15 16:05:54,474/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-15 16:05:54,474/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.jaxrs.JaxrsSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-15 16:05:54,475/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.pojo.PojoSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-15 16:05:54,581/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2017-06-15 16:05:54,582/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2017-06-15 16:05:54,824/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]register schema hellotest/hello/hello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:89)
[2017-06-15 16:05:54,900/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]generate swagger for hellotest/hello/codeFirstCompute, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.samples.pojo.server.CodeFirstComputeImpl"
  x-java-interface: "cse.gen.hellotest.hello.codeFirstCompute.CodeFirstComputeImplIntf"
basePath: "/CodeFirstComputeImpl"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /add:
    post:
      operationId: "add"
      parameters:
      - in: "body"
        name: "addBody"
        required: false
        schema:
          $ref: "#/definitions/addBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "integer"
            format: "int32"
  /sub:
    post:
      operationId: "sub"
      parameters:
      - in: "body"
        name: "subBody"
        required: false
        schema:
          $ref: "#/definitions/subBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "integer"
            format: "int32"
  /divide:
    post:
      operationId: "divide"
      parameters:
      - in: "body"
        name: "divideBody"
        required: false
        schema:
          $ref: "#/definitions/divideBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "integer"
            format: "int32"
  /multi:
    post:
      operationId: "multi"
      parameters:
      - in: "body"
        name: "multiBody"
        required: false
        schema:
          $ref: "#/definitions/multiBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "integer"
            format: "int32"
definitions:
  addBody:
    type: "object"
    properties:
      a:
        type: "integer"
        format: "int32"
      b:
        type: "integer"
        format: "int32"
    x-java-class: "cse.gen.hellotest.hello.codeFirstCompute.addBody"
  divideBody:
    type: "object"
    properties:
      a:
        type: "integer"
        format: "int32"
      b:
        type: "integer"
        format: "int32"
    x-java-class: "cse.gen.hellotest.hello.codeFirstCompute.divideBody"
  multiBody:
    type: "object"
    properties:
      a:
        type: "integer"
        format: "int32"
      b:
        type: "integer"
        format: "int32"
    x-java-class: "cse.gen.hellotest.hello.codeFirstCompute.multiBody"
  subBody:
    type: "object"
    properties:
      a:
        type: "integer"
        format: "int32"
      b:
        type: "integer"
        format: "int32"
    x-java-class: "cse.gen.hellotest.hello.codeFirstCompute.subBody"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:92)
[2017-06-15 16:05:54,901/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]register schema hellotest/hello/codeFirstCompute io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:89)
[2017-06-15 16:05:54,976/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]add hostName:zhenghaibodembp,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:91)
[2017-06-15 16:05:54,977/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]add hostName:zhenghaibodeMBP,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:50)
[2017-06-15 16:05:54,979/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][WARN]address 0.0.0.0:7070?login=true, auto select a host address to publish 192.168.43.19:7070, maybe not the correct one io.servicecomb.serviceregistry.RegistryUtils.getPublishAddress(RegistryUtils.java:554)
[2017-06-15 16:05:55,293/CST][vert.x-eventloop-thread-0][INFO]highway listen success. address=0.0.0.0:7070 io.servicecomb.transport.highway.HighwayServerVerticle.lambda$startListen$0(HighwayServerVerticle.java:68)
[2017-06-15 16:05:55,295/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]endpoint to publish: highway://192.168.43.19:7070?login=true io.servicecomb.core.transport.TransportManager.init(TransportManager.java:52)
[2017-06-15 16:05:55,298/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][WARN]address 0.0.0.0:8080, auto select a host address to publish 192.168.43.19:8080, maybe not the correct one io.servicecomb.serviceregistry.RegistryUtils.getPublishAddress(RegistryUtils.java:554)
[2017-06-15 16:05:55,301/CST][vert.x-eventloop-thread-2][INFO]set uploads directory to null io.servicecomb.transport.rest.vertx.RestServerVerticle.init(RestServerVerticle.java:68)
[2017-06-15 16:05:55,324/CST][vert.x-eventloop-thread-2][INFO]rest listen success. address=0.0.0.0:8080 io.servicecomb.transport.rest.vertx.RestServerVerticle.lambda$startListen$0(RestServerVerticle.java:97)
[2017-06-15 16:05:55,324/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]endpoint to publish: rest://192.168.43.19:8080 io.servicecomb.core.transport.TransportManager.init(TransportManager.java:52)
[2017-06-15 16:05:55,325/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][WARN]address 0.0.0.0:8080, auto select a host address to publish 192.168.43.19:8080, maybe not the correct one io.servicecomb.serviceregistry.RegistryUtils.getPublishAddress(RegistryUtils.java:554)
[2017-06-15 16:05:55,325/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]endpoint to publish: rest://192.168.43.19:8080 io.servicecomb.core.transport.TransportManager.init(TransportManager.java:52)
[2017-06-15 16:05:55,326/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]on schema loaded, new schema. hello:hello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-15 16:05:55,335/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]on schema loaded, new schema. hello:codeFirstCompute io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-15 16:05:55,337/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]It is running in the normal mode, a separated service registry is required io.servicecomb.serviceregistry.client.RegistryClientFactory.getRegistryClient(RegistryClientFactory.java:60)
[2017-06-15 16:05:55,441/CST][vert.x-eventloop-thread-0][ERROR]GET /registry/v3/existence?appId=hellotest&type=microservice&serviceName=hello&version=0.0.1 fail, endpoint is 127.0.0.1:9980, message: Connection refused: /127.0.0.1:9980 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:83)
[2017-06-15 16:05:55,441/CST][vert.x-eventloop-thread-0][WARN]service center has no available instance io.servicecomb.serviceregistry.client.IpPortManager.nextDefaultIpPort(IpPortManager.java:123)
[2017-06-15 16:05:55,458/CST][vert.x-eventloop-thread-0][ERROR]POST /registry/v3/microservices fail, endpoint is 127.0.0.1:9980, message: Connection refused: /127.0.0.1:9980 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:83)
[2017-06-15 16:05:55,459/CST][vert.x-eventloop-thread-0][WARN]service center has no available instance io.servicecomb.serviceregistry.client.IpPortManager.nextDefaultIpPort(IpPortManager.java:123)
[2017-06-15 16:05:55,459/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][ERROR]Registry microservice failed. appId=hellotest, name=hello, version=0.0.1 io.servicecomb.serviceregistry.RegistryUtils.regsiterMicroservice(RegistryUtils.java:322)
[2017-06-15 16:05:55,460/CST][vert.x-eventloop-thread-0][ERROR]GET /registry/v3/existence?appId=hellotest&type=microservice&serviceName=hello&version=0.0.1 fail, endpoint is 127.0.0.1:9980, message: Connection refused: /127.0.0.1:9980 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:83)
[2017-06-15 16:05:55,461/CST][vert.x-eventloop-thread-0][WARN]service center has no available instance io.servicecomb.serviceregistry.client.IpPortManager.nextDefaultIpPort(IpPortManager.java:123)
[2017-06-15 16:05:55,462/CST][vert.x-eventloop-thread-0][ERROR]POST /registry/v3/microservices fail, endpoint is 127.0.0.1:9980, message: Connection refused: /127.0.0.1:9980 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:83)
[2017-06-15 16:05:55,463/CST][vert.x-eventloop-thread-0][WARN]service center has no available instance io.servicecomb.serviceregistry.client.IpPortManager.nextDefaultIpPort(IpPortManager.java:123)
[2017-06-15 16:05:55,463/CST][RegistryThread][ERROR]Registry microservice failed. appId=hellotest, name=hello, version=0.0.1 io.servicecomb.serviceregistry.RegistryUtils.regsiterMicroservice(RegistryUtils.java:322)
[2017-06-15 16:06:05,469/CST][vert.x-eventloop-thread-0][ERROR]GET /registry/v3/existence?appId=hellotest&type=microservice&serviceName=hello&version=0.0.1 fail, endpoint is 127.0.0.1:9980, message: Connection refused: /127.0.0.1:9980 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:83)
[2017-06-15 16:06:05,470/CST][vert.x-eventloop-thread-0][WARN]service center has no available instance io.servicecomb.serviceregistry.client.IpPortManager.nextDefaultIpPort(IpPortManager.java:123)
[2017-06-15 16:06:05,473/CST][vert.x-eventloop-thread-0][ERROR]POST /registry/v3/microservices fail, endpoint is 127.0.0.1:9980, message: Connection refused: /127.0.0.1:9980 io.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:83)
[2017-06-15 16:06:05,474/CST][vert.x-eventloop-thread-0][WARN]service center has no available instance io.servicecomb.serviceregistry.client.IpPortManager.nextDefaultIpPort(IpPortManager.java:123)
[2017-06-15 16:06:05,474/CST][RegistryThread][ERROR]Registry microservice failed. appId=hellotest, name=hello, version=0.0.1 io.servicecomb.serviceregistry.RegistryUtils.regsiterMicroservice(RegistryUtils.java:322)
[2017-06-15 16:06:18,998/CST][Thread-4][WARN]handler chain is shutting down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:86)
[2017-06-15 16:06:18,998/CST][Thread-8][INFO]Closing org.springframework.context.support.ClassPathXmlApplicationContext@53cbc712: startup date [Thu Jun 15 16:05:52 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987)
[2017-06-15 16:06:18,998/CST][Thread-4][WARN]handler chain is shut down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:97)
[2017-06-15 16:06:18,999/CST][Thread-8][WARN]cse is closing now... io.servicecomb.core.CseApplicationListener.onApplicationEvent(CseApplicationListener.java:115)
[2017-06-15 16:06:19,055/CST][vert.x-eventloop-thread-0][WARN]service does not exist io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:113)
[2017-06-15 16:06:19,057/CST][Thread-8][WARN]Bad Request io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.unregisterMicroserviceInstance(ServiceRegistryClientImpl.java:397)
[2017-06-15 16:06:19,057/CST][Thread-8][ERROR]Unregister microservice instance failed. microserviceId=null instanceId=null io.servicecomb.serviceregistry.RegistryUtils.unregsiterInstance(RegistryUtils.java:265)
[2017-06-15 16:06:19,058/CST][Thread-8][WARN]cse is closing now... io.servicecomb.core.CseApplicationListener.onApplicationEvent(CseApplicationListener.java:115)
[2017-06-15 16:06:19,058/CST][RegistryThread][ERROR]register microservice hellotest/hello/0.0.1 failed io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.registerMicroservice(ServiceRegistryClientImpl.java:277)
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:998)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1304)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:231)
	at io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.registerMicroservice(ServiceRegistryClientImpl.java:272)
	at io.servicecomb.serviceregistry.RegistryUtils.regsiterMicroservice(RegistryUtils.java:320)
	at io.servicecomb.serviceregistry.RegistryUtils.ensureRegisterMicroservice(RegistryUtils.java:280)
	at io.servicecomb.serviceregistry.RegistryThread.doInit(RegistryThread.java:46)
	at io.servicecomb.serviceregistry.RegistryThread.run(RegistryThread.java:69)
[2017-06-15 16:06:19,063/CST][RegistryThread][ERROR]Registry microservice failed. appId=hellotest, name=hello, version=0.0.1 io.servicecomb.serviceregistry.RegistryUtils.regsiterMicroservice(RegistryUtils.java:322)
[2017-06-15 16:06:19,077/CST][Thread-8][WARN]Bad Request io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.unregisterMicroserviceInstance(ServiceRegistryClientImpl.java:397)
[2017-06-15 16:06:19,077/CST][Thread-8][ERROR]Unregister microservice instance failed. microserviceId=null instanceId=null io.servicecomb.serviceregistry.RegistryUtils.unregsiterInstance(RegistryUtils.java:265)
[2017-06-15 16:06:24,974/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Write merged log4j config file to /Users/zhenghaibo/git/samples/pojo-sample/target/classes/config/merged.log4j.properties io.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:102)
[2017-06-15 16:06:25,155/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c0d84ee: startup date [Thu Jun 15 16:06:25 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2017-06-15 16:06:25,193/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/java-chassis-core/0.1.0-m2-SNAPSHOT/java-chassis-core-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:06:25,503/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-common/0.1.0-m2-SNAPSHOT/foundation-common-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:06:25,523/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-config/0.1.0-m2-SNAPSHOT/foundation-config-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:06:25,538/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-metrics/0.1.0-m2-SNAPSHOT/foundation-metrics-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:06:25,558/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-vertx/0.1.0-m2-SNAPSHOT/foundation-vertx-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:06:25,574/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/transport-rest-client/0.1.0-m2-SNAPSHOT/transport-rest-client-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:06:25,736/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/java-chassis-core/0.1.0-m2-SNAPSHOT/java-chassis-core-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:06:25,870/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-common/0.1.0-m2-SNAPSHOT/foundation-common-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:06:25,883/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-config/0.1.0-m2-SNAPSHOT/foundation-config-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:06:25,899/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-metrics/0.1.0-m2-SNAPSHOT/foundation-metrics-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:06:25,918/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-vertx/0.1.0-m2-SNAPSHOT/foundation-vertx-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:06:25,934/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/transport-rest-client/0.1.0-m2-SNAPSHOT/transport-rest-client-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:06:26,111/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2017-06-15 16:06:26,111/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2017-06-15 16:06:26,202/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]config center URL is missing, skip to load configuration from config center io.servicecomb.config.ConfigurationSpringInitializer.<init>(ConfigurationSpringInitializer.java:80)
[2017-06-15 16:06:26,215/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][WARN]Configuration installed by others, will ignore this configuration. io.servicecomb.config.ConfigurationSpringInitializer.<init>(ConfigurationSpringInitializer.java:46)
[2017-06-15 16:06:26,456/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2017-06-15 16:06:26,805/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-15 16:06:26,805/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.jaxrs.JaxrsSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-15 16:06:26,805/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.pojo.PojoSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-15 16:06:26,903/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2017-06-15 16:06:26,904/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2017-06-15 16:06:27,107/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]register schema hellotest/hello/hello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:89)
[2017-06-15 16:06:27,164/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]generate swagger for hellotest/hello/codeFirstCompute, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.samples.pojo.server.CodeFirstComputeImpl"
  x-java-interface: "cse.gen.hellotest.hello.codeFirstCompute.CodeFirstComputeImplIntf"
basePath: "/CodeFirstComputeImpl"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /add:
    post:
      operationId: "add"
      parameters:
      - in: "body"
        name: "addBody"
        required: false
        schema:
          $ref: "#/definitions/addBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "integer"
            format: "int32"
  /sub:
    post:
      operationId: "sub"
      parameters:
      - in: "body"
        name: "subBody"
        required: false
        schema:
          $ref: "#/definitions/subBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "integer"
            format: "int32"
  /divide:
    post:
      operationId: "divide"
      parameters:
      - in: "body"
        name: "divideBody"
        required: false
        schema:
          $ref: "#/definitions/divideBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "integer"
            format: "int32"
  /multi:
    post:
      operationId: "multi"
      parameters:
      - in: "body"
        name: "multiBody"
        required: false
        schema:
          $ref: "#/definitions/multiBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "integer"
            format: "int32"
definitions:
  addBody:
    type: "object"
    properties:
      a:
        type: "integer"
        format: "int32"
      b:
        type: "integer"
        format: "int32"
    x-java-class: "cse.gen.hellotest.hello.codeFirstCompute.addBody"
  divideBody:
    type: "object"
    properties:
      a:
        type: "integer"
        format: "int32"
      b:
        type: "integer"
        format: "int32"
    x-java-class: "cse.gen.hellotest.hello.codeFirstCompute.divideBody"
  multiBody:
    type: "object"
    properties:
      a:
        type: "integer"
        format: "int32"
      b:
        type: "integer"
        format: "int32"
    x-java-class: "cse.gen.hellotest.hello.codeFirstCompute.multiBody"
  subBody:
    type: "object"
    properties:
      a:
        type: "integer"
        format: "int32"
      b:
        type: "integer"
        format: "int32"
    x-java-class: "cse.gen.hellotest.hello.codeFirstCompute.subBody"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:92)
[2017-06-15 16:06:27,165/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]register schema hellotest/hello/codeFirstCompute io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:89)
[2017-06-15 16:06:27,199/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]add hostName:zhenghaibodembp,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:91)
[2017-06-15 16:06:27,200/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]add hostName:zhenghaibodeMBP,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:50)
[2017-06-15 16:06:27,202/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][WARN]address 0.0.0.0:7070?login=true, auto select a host address to publish 192.168.43.19:7070, maybe not the correct one io.servicecomb.serviceregistry.RegistryUtils.getPublishAddress(RegistryUtils.java:554)
[2017-06-15 16:06:27,493/CST][vert.x-eventloop-thread-0][INFO]highway listen success. address=0.0.0.0:7070 io.servicecomb.transport.highway.HighwayServerVerticle.lambda$startListen$0(HighwayServerVerticle.java:68)
[2017-06-15 16:06:27,496/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]endpoint to publish: highway://192.168.43.19:7070?login=true io.servicecomb.core.transport.TransportManager.init(TransportManager.java:52)
[2017-06-15 16:06:27,498/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][WARN]address 0.0.0.0:8080, auto select a host address to publish 192.168.43.19:8080, maybe not the correct one io.servicecomb.serviceregistry.RegistryUtils.getPublishAddress(RegistryUtils.java:554)
[2017-06-15 16:06:27,501/CST][vert.x-eventloop-thread-2][INFO]set uploads directory to null io.servicecomb.transport.rest.vertx.RestServerVerticle.init(RestServerVerticle.java:68)
[2017-06-15 16:06:27,526/CST][vert.x-eventloop-thread-2][INFO]rest listen success. address=0.0.0.0:8080 io.servicecomb.transport.rest.vertx.RestServerVerticle.lambda$startListen$0(RestServerVerticle.java:97)
[2017-06-15 16:06:27,527/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]endpoint to publish: rest://192.168.43.19:8080 io.servicecomb.core.transport.TransportManager.init(TransportManager.java:52)
[2017-06-15 16:06:27,528/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][WARN]address 0.0.0.0:8080, auto select a host address to publish 192.168.43.19:8080, maybe not the correct one io.servicecomb.serviceregistry.RegistryUtils.getPublishAddress(RegistryUtils.java:554)
[2017-06-15 16:06:27,528/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]endpoint to publish: rest://192.168.43.19:8080 io.servicecomb.core.transport.TransportManager.init(TransportManager.java:52)
[2017-06-15 16:06:27,529/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]on schema loaded, new schema. hello:hello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-15 16:06:27,536/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]on schema loaded, new schema. hello:codeFirstCompute io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-15 16:06:27,537/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]It is running in the normal mode, a separated service registry is required io.servicecomb.serviceregistry.client.RegistryClientFactory.getRegistryClient(RegistryClientFactory.java:60)
[2017-06-15 16:06:27,698/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Microservice exists in service center, no need to register. id=2 appId=hellotest, name=hello, version=0.0.1 io.servicecomb.serviceregistry.RegistryUtils.regsiterMicroservice(RegistryUtils.java:311)
[2017-06-15 16:06:27,707/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]SchemaIds is equals to service center. id=2 appId=hellotest, name=hello, version=0.0.1, schemaIds=[hello, codeFirstCompute] io.servicecomb.serviceregistry.RegistryUtils.checkSchemaIdSet(RegistryUtils.java:365)
[2017-06-15 16:06:27,711/CST][vert.x-eventloop-thread-0][WARN]Schema does not exist io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:113)
[2017-06-15 16:06:27,711/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]schemaId hello exists false io.servicecomb.serviceregistry.RegistryUtils.registerSchemas(RegistryUtils.java:294)
[2017-06-15 16:06:27,720/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]register schema 2/hello, result true io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.registerSchema(ServiceRegistryClientImpl.java:214)
[2017-06-15 16:06:27,735/CST][vert.x-eventloop-thread-0][WARN]Schema does not exist io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:113)
[2017-06-15 16:06:27,736/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]schemaId codeFirstCompute exists false io.servicecomb.serviceregistry.RegistryUtils.registerSchemas(RegistryUtils.java:294)
[2017-06-15 16:06:27,740/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]register schema 2/codeFirstCompute, result true io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.registerSchema(ServiceRegistryClientImpl.java:214)
[2017-06-15 16:06:27,842/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Register microservice instance success. microserviceId=2 instanceId=2 endpoints=[highway://192.168.43.19:7070?login=true, rest://192.168.43.19:8080, rest://192.168.43.19:8080] lease 120s io.servicecomb.serviceregistry.RegistryUtils.regsiterInstance(RegistryUtils.java:246)
[2017-06-15 16:06:27,886/CST][vert.x-eventloop-thread-2][INFO]watching microservice 2 successfully, the chosen service center address is 127.0.0.1:9980 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$watch$4(ServiceRegistryClientImpl.java:477)
[2017-06-15 16:06:52,882/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Write merged log4j config file to /Users/zhenghaibo/git/samples/pojo-sample/target/classes/config/merged.log4j.properties io.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:102)
[2017-06-15 16:06:53,014/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@76cb7e3b: startup date [Thu Jun 15 16:06:53 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2017-06-15 16:06:53,049/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/java-chassis-core/0.1.0-m2-SNAPSHOT/java-chassis-core-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:06:53,348/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-common/0.1.0-m2-SNAPSHOT/foundation-common-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:06:53,366/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-config/0.1.0-m2-SNAPSHOT/foundation-config-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:06:53,380/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-metrics/0.1.0-m2-SNAPSHOT/foundation-metrics-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:06:53,396/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-vertx/0.1.0-m2-SNAPSHOT/foundation-vertx-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:06:53,410/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/transport-rest-client/0.1.0-m2-SNAPSHOT/transport-rest-client-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:06:53,544/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/java-chassis-core/0.1.0-m2-SNAPSHOT/java-chassis-core-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:06:53,641/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-common/0.1.0-m2-SNAPSHOT/foundation-common-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:06:53,650/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-config/0.1.0-m2-SNAPSHOT/foundation-config-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:06:53,660/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-metrics/0.1.0-m2-SNAPSHOT/foundation-metrics-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:06:53,671/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-vertx/0.1.0-m2-SNAPSHOT/foundation-vertx-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:06:53,689/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/transport-rest-client/0.1.0-m2-SNAPSHOT/transport-rest-client-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 16:06:53,832/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2017-06-15 16:06:53,832/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2017-06-15 16:06:53,911/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]config center URL is missing, skip to load configuration from config center io.servicecomb.config.ConfigurationSpringInitializer.<init>(ConfigurationSpringInitializer.java:80)
[2017-06-15 16:06:53,921/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][WARN]Configuration installed by others, will ignore this configuration. io.servicecomb.config.ConfigurationSpringInitializer.<init>(ConfigurationSpringInitializer.java:46)
[2017-06-15 16:06:54,193/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2017-06-15 16:06:54,615/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-15 16:06:54,616/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.jaxrs.JaxrsSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-15 16:06:54,616/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.pojo.PojoSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-15 16:06:54,711/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2017-06-15 16:06:54,712/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2017-06-15 16:06:54,912/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]generate swagger for hellotest/helloClient/hello, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.samples.pojo.server.HelloImpl"
  x-java-interface: "cse.gen.hellotest.helloClient.hello.HelloImplIntf"
basePath: "/HelloImpl"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /sayHi:
    post:
      operationId: "sayHi"
      parameters:
      - in: "body"
        name: "name"
        required: false
        schema:
          $ref: "#/definitions/sayHiBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
definitions:
  sayHiBody:
    type: "object"
    properties:
      name:
        type: "string"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:92)
[2017-06-15 16:06:54,913/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]register schema hellotest/helloClient/hello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:89)
[2017-06-15 16:06:54,954/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]generate swagger for hellotest/helloClient/codeFirstCompute, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.samples.pojo.server.CodeFirstComputeImpl"
  x-java-interface: "cse.gen.hellotest.helloClient.codeFirstCompute.CodeFirstComputeImplIntf"
basePath: "/CodeFirstComputeImpl"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /add:
    post:
      operationId: "add"
      parameters:
      - in: "body"
        name: "addBody"
        required: false
        schema:
          $ref: "#/definitions/addBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "integer"
            format: "int32"
  /sub:
    post:
      operationId: "sub"
      parameters:
      - in: "body"
        name: "subBody"
        required: false
        schema:
          $ref: "#/definitions/subBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "integer"
            format: "int32"
  /divide:
    post:
      operationId: "divide"
      parameters:
      - in: "body"
        name: "divideBody"
        required: false
        schema:
          $ref: "#/definitions/divideBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "integer"
            format: "int32"
  /multi:
    post:
      operationId: "multi"
      parameters:
      - in: "body"
        name: "multiBody"
        required: false
        schema:
          $ref: "#/definitions/multiBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "integer"
            format: "int32"
definitions:
  addBody:
    type: "object"
    properties:
      a:
        type: "integer"
        format: "int32"
      b:
        type: "integer"
        format: "int32"
    x-java-class: "cse.gen.hellotest.helloClient.codeFirstCompute.addBody"
  divideBody:
    type: "object"
    properties:
      a:
        type: "integer"
        format: "int32"
      b:
        type: "integer"
        format: "int32"
    x-java-class: "cse.gen.hellotest.helloClient.codeFirstCompute.divideBody"
  multiBody:
    type: "object"
    properties:
      a:
        type: "integer"
        format: "int32"
      b:
        type: "integer"
        format: "int32"
    x-java-class: "cse.gen.hellotest.helloClient.codeFirstCompute.multiBody"
  subBody:
    type: "object"
    properties:
      a:
        type: "integer"
        format: "int32"
      b:
        type: "integer"
        format: "int32"
    x-java-class: "cse.gen.hellotest.helloClient.codeFirstCompute.subBody"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:92)
[2017-06-15 16:06:54,956/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]register schema hellotest/helloClient/codeFirstCompute io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:89)
[2017-06-15 16:06:54,971/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Found schema ids local, hellotest:hello:[hello] io.servicecomb.core.definition.schema.ConsumerSchemaFactory.findLocalSchemas(ConsumerSchemaFactory.java:103)
[2017-06-15 16:06:54,972/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]It is running in the normal mode, a separated service registry is required io.servicecomb.serviceregistry.client.RegistryClientFactory.getRegistryClient(RegistryClientFactory.java:60)
[2017-06-15 16:06:54,988/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]add hostName:zhenghaibodembp,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:91)
[2017-06-15 16:06:54,990/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]add hostName:zhenghaibodeMBP,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:50)
[2017-06-15 16:06:55,409/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Found schema ids from service center, hellotest:hello:0.0.1:[hello, codeFirstCompute] io.servicecomb.core.definition.schema.ConsumerSchemaFactory.findMicroservice(ConsumerSchemaFactory.java:128)
[2017-06-15 16:06:55,448/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]register schema hellotest/hello/hello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:89)
[2017-06-15 16:06:55,457/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]load schema from service center, microservice=hellotest:hello:0.0.1, schemaId=codeFirstCompute, result=true io.servicecomb.core.definition.schema.ConsumerSchemaFactory.loadSwagger(ConsumerSchemaFactory.java:177)
[2017-06-15 16:06:55,467/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]register schema hellotest/hello/codeFirstCompute io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:89)
[2017-06-15 16:06:55,471/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]on schema loaded, new schema. hello:hello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-15 16:06:55,478/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]on schema loaded, new schema. hello:codeFirstCompute io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-15 16:06:55,487/CST][vert.x-eventloop-thread-0][WARN]highway listen address is not configured, will not listen. io.servicecomb.transport.highway.HighwayServerVerticle.startListen(HighwayServerVerticle.java:59)
[2017-06-15 16:06:55,491/CST][vert.x-eventloop-thread-2][INFO]set uploads directory to null io.servicecomb.transport.rest.vertx.RestServerVerticle.init(RestServerVerticle.java:68)
[2017-06-15 16:06:55,491/CST][vert.x-eventloop-thread-2][WARN]rest listen address is not configured, will not start. io.servicecomb.transport.rest.vertx.RestServerVerticle.start(RestServerVerticle.java:77)
[2017-06-15 16:06:55,492/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][WARN]address 0.0.0.0:8080, auto select a host address to publish 192.168.43.19:8080, maybe not the correct one io.servicecomb.serviceregistry.RegistryUtils.getPublishAddress(RegistryUtils.java:554)
[2017-06-15 16:06:55,493/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]endpoint to publish: rest://192.168.43.19:8080 io.servicecomb.core.transport.TransportManager.init(TransportManager.java:52)
[2017-06-15 16:06:55,495/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]on schema loaded, new schema. helloClient:hello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-15 16:06:55,496/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]on schema loaded, new schema. helloClient:codeFirstCompute io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-15 16:06:55,497/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]on schema loaded, exists schema. hello:hello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:46)
[2017-06-15 16:06:55,497/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]on schema loaded, exists schema. hello:codeFirstCompute io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:46)
[2017-06-15 16:06:55,504/CST][vert.x-eventloop-thread-0][WARN]service does not exist io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:113)
[2017-06-15 16:06:55,613/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Registry Microservice successfully. id=3 appId=hellotest, name=helloClient, version=0.0.1, schemaIds=[hello, codeFirstCompute] io.servicecomb.serviceregistry.RegistryUtils.regsiterMicroservice(RegistryUtils.java:329)
[2017-06-15 16:06:55,617/CST][vert.x-eventloop-thread-0][WARN]Schema does not exist io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:113)
[2017-06-15 16:06:55,617/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]schemaId hello exists false io.servicecomb.serviceregistry.RegistryUtils.registerSchemas(RegistryUtils.java:294)
[2017-06-15 16:06:55,621/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]register schema 3/hello, result true io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.registerSchema(ServiceRegistryClientImpl.java:214)
[2017-06-15 16:06:55,631/CST][vert.x-eventloop-thread-0][WARN]Schema does not exist io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:113)
[2017-06-15 16:06:55,632/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]schemaId codeFirstCompute exists false io.servicecomb.serviceregistry.RegistryUtils.registerSchemas(RegistryUtils.java:294)
[2017-06-15 16:06:55,636/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]register schema 3/codeFirstCompute, result true io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.registerSchema(ServiceRegistryClientImpl.java:214)
[2017-06-15 16:06:55,700/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Register microservice instance success. microserviceId=3 instanceId=3 endpoints=[rest://192.168.43.19:8080] lease 120s io.servicecomb.serviceregistry.RegistryUtils.regsiterInstance(RegistryUtils.java:246)
[2017-06-15 16:06:55,752/CST][vert.x-eventloop-thread-2][INFO]watching microservice 3 successfully, the chosen service center address is 127.0.0.1:9980 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$watch$4(ServiceRegistryClientImpl.java:477)
[2017-06-15 16:06:55,880/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Using loadbalance rule [com.netflix.loadbalancer.RoundRobinRule] for service [hello,]. io.servicecomb.loadbalance.LoadbalanceHandler.createLoadBalancer(LoadbalanceHandler.java:291)
[2017-06-15 16:06:56,047/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]find instances[1] from service center success. service=hellotest/hello io.servicecomb.serviceregistry.RegistryUtils.findServiceInstance(RegistryUtils.java:421)
[2017-06-15 16:06:56,048/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]service id=2, instance id=2, endpoints=[highway://192.168.43.19:7070?login=true, rest://192.168.43.19:8080, rest://192.168.43.19:8080] io.servicecomb.serviceregistry.RegistryUtils.findServiceInstance(RegistryUtils.java:426)
[2017-06-15 16:06:56,193/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]connecting to address /192.168.43.19:7070 io.servicecomb.foundation.vertx.client.tcp.TcpClientConnection.connect(TcpClientConnection.java:126)
[2017-06-15 16:06:56,202/CST][vert.x-eventloop-thread-9][INFO]connect to address /192.168.43.19:7070 success io.servicecomb.foundation.vertx.client.tcp.TcpClientConnection.onConnectSuccess(TcpClientConnection.java:139)
[2017-06-15 16:06:56,206/CST][vert.x-eventloop-thread-9][INFO]try login to address /192.168.43.19:7070 io.servicecomb.foundation.vertx.client.tcp.TcpClientConnection.tryLogin(TcpClientConnection.java:187)
[2017-06-15 16:06:56,207/CST][vert.x-eventloop-thread-0][INFO]connect from 192.168.43.19:55598, in thread vert.x-eventloop-thread-0 io.servicecomb.foundation.vertx.server.TcpServerConnection.init(TcpServerConnection.java:36)
[2017-06-15 16:06:56,303/CST][vert.x-eventloop-thread-9][INFO]login success, address /192.168.43.19:7070 io.servicecomb.foundation.vertx.client.tcp.TcpClientConnection.onLoginResponse(TcpClientConnection.java:211)
[2017-06-15 16:06:56,304/CST][vert.x-eventloop-thread-9][INFO]writting cached buffer to address /192.168.43.19:7070 io.servicecomb.foundation.vertx.client.tcp.TcpClientConnection.onLoginSuccess(TcpClientConnection.java:217)
[2017-06-15 16:06:57,017/CST][metrics][INFO]Cycle stat output:
             call count       msg count        avg tps    avg latency(ms) |[0,20)    [20,100)  [100,300) [300,500) [500,...) 
 io.servicecomb.foundation.metrics.performance.PerfStatMonitorMgr.onCycle(PerfStatMonitorMgr.java:78)
[2017-06-15 16:06:57,998/CST][metrics][INFO]Cycle stat output:
             call count       msg count        avg tps    avg latency(ms) |[0,20)    [20,100)  [100,300) [300,500) [500,...) 
 io.servicecomb.foundation.metrics.performance.PerfStatMonitorMgr.onCycle(PerfStatMonitorMgr.java:78)
[2017-06-15 16:07:08,405/CST][Thread-4][WARN]handler chain is shutting down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:86)
[2017-06-15 16:07:08,405/CST][Thread-8][INFO]Closing org.springframework.context.support.ClassPathXmlApplicationContext@76cb7e3b: startup date [Thu Jun 15 16:06:53 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987)
[2017-06-15 16:07:08,405/CST][Thread-4][WARN]handler chain is shut down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:97)
[2017-06-15 16:07:08,406/CST][Thread-8][WARN]cse is closing now... io.servicecomb.core.CseApplicationListener.onApplicationEvent(CseApplicationListener.java:115)
[2017-06-15 16:07:08,409/CST][Thread-8][INFO]Unregister microservice instance success. microserviceId=3 instanceId=3 io.servicecomb.serviceregistry.RegistryUtils.unregsiterInstance(RegistryUtils.java:270)
[2017-06-15 16:07:08,409/CST][Thread-8][WARN]cse is closing now... io.servicecomb.core.CseApplicationListener.onApplicationEvent(CseApplicationListener.java:115)
[2017-06-15 16:07:08,425/CST][Thread-8][WARN]Bad Request io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.unregisterMicroserviceInstance(ServiceRegistryClientImpl.java:397)
[2017-06-15 16:07:08,425/CST][Thread-8][ERROR]Unregister microservice instance failed. microserviceId=3 instanceId=3 io.servicecomb.serviceregistry.RegistryUtils.unregsiterInstance(RegistryUtils.java:265)
[2017-06-15 16:07:08,790/CST][vert.x-eventloop-thread-0][ERROR]disconected from 192.168.43.19:55598, in thread vert.x-eventloop-thread-0 io.servicecomb.foundation.vertx.server.TcpServerConnection.lambda$init$1(TcpServerConnection.java:46)
[2017-06-15 16:07:12,044/CST][Thread-4][WARN]handler chain is shutting down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:86)
[2017-06-15 16:07:12,045/CST][Thread-8][INFO]Closing org.springframework.context.support.ClassPathXmlApplicationContext@1c0d84ee: startup date [Thu Jun 15 16:06:25 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987)
[2017-06-15 16:07:12,045/CST][Thread-4][WARN]handler chain is shut down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:97)
[2017-06-15 16:07:12,046/CST][Thread-8][WARN]cse is closing now... io.servicecomb.core.CseApplicationListener.onApplicationEvent(CseApplicationListener.java:115)
[2017-06-15 16:07:12,049/CST][Thread-8][INFO]Unregister microservice instance success. microserviceId=2 instanceId=2 io.servicecomb.serviceregistry.RegistryUtils.unregsiterInstance(RegistryUtils.java:270)
[2017-06-15 16:07:12,050/CST][Thread-8][WARN]cse is closing now... io.servicecomb.core.CseApplicationListener.onApplicationEvent(CseApplicationListener.java:115)
[2017-06-15 16:07:12,061/CST][Thread-8][WARN]Bad Request io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.unregisterMicroserviceInstance(ServiceRegistryClientImpl.java:397)
[2017-06-15 16:07:12,062/CST][Thread-8][ERROR]Unregister microservice instance failed. microserviceId=2 instanceId=2 io.servicecomb.serviceregistry.RegistryUtils.unregsiterInstance(RegistryUtils.java:265)
[2017-06-15 17:45:29,204/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Write merged log4j config file to /Users/zhenghaibo/git/samples/pojo-sample/target/classes/config/merged.log4j.properties io.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:102)
[2017-06-15 17:45:29,280/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7e42823d: startup date [Thu Jun 15 17:45:29 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2017-06-15 17:45:29,325/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/java-chassis-core/0.1.0-m2-SNAPSHOT/java-chassis-core-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 17:45:29,675/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-common/0.1.0-m2-SNAPSHOT/foundation-common-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 17:45:29,695/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-config/0.1.0-m2-SNAPSHOT/foundation-config-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 17:45:29,713/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-metrics/0.1.0-m2-SNAPSHOT/foundation-metrics-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 17:45:29,729/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-vertx/0.1.0-m2-SNAPSHOT/foundation-vertx-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 17:45:29,745/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/transport-rest-client/0.1.0-m2-SNAPSHOT/transport-rest-client-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 17:45:29,903/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/java-chassis-core/0.1.0-m2-SNAPSHOT/java-chassis-core-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 17:45:30,002/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-common/0.1.0-m2-SNAPSHOT/foundation-common-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 17:45:30,013/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-config/0.1.0-m2-SNAPSHOT/foundation-config-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 17:45:30,024/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-metrics/0.1.0-m2-SNAPSHOT/foundation-metrics-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 17:45:30,034/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-vertx/0.1.0-m2-SNAPSHOT/foundation-vertx-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 17:45:30,049/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/transport-rest-client/0.1.0-m2-SNAPSHOT/transport-rest-client-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 17:45:30,190/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2017-06-15 17:45:30,191/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2017-06-15 17:45:30,261/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]config center URL is missing, skip to load configuration from config center io.servicecomb.config.ConfigurationSpringInitializer.<init>(ConfigurationSpringInitializer.java:80)
[2017-06-15 17:45:30,271/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][WARN]Configuration installed by others, will ignore this configuration. io.servicecomb.config.ConfigurationSpringInitializer.<init>(ConfigurationSpringInitializer.java:46)
[2017-06-15 17:45:30,679/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2017-06-15 17:45:31,019/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-15 17:45:31,019/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.jaxrs.JaxrsSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-15 17:45:31,020/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.pojo.PojoSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-15 17:45:31,127/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2017-06-15 17:45:31,128/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2017-06-15 17:45:31,420/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]register schema hellotest/hello/hello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:89)
[2017-06-15 17:45:31,452/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][WARN]Bad practice, low performance, convert from class java.lang.String to class io.servicecomb.samples.pojo.models.Person io.servicecomb.swagger.invocation.converter.ConverterMgr.findConverter(ConverterMgr.java:102)
[2017-06-15 17:45:31,453/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][WARN]Bad practice, low performance, convert from class cse.gen.hellotest.hello.hello.sayHello.Person to class io.servicecomb.samples.pojo.models.Person io.servicecomb.swagger.invocation.converter.ConverterMgr.findConverter(ConverterMgr.java:102)
[2017-06-15 17:45:31,526/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]generate swagger for hellotest/hello/codeFirstCompute, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.samples.pojo.server.CodeFirstComputeImpl"
  x-java-interface: "cse.gen.hellotest.hello.codeFirstCompute.CodeFirstComputeImplIntf"
basePath: "/CodeFirstComputeImpl"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /add:
    post:
      operationId: "add"
      parameters:
      - in: "body"
        name: "addBody"
        required: false
        schema:
          $ref: "#/definitions/addBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "integer"
            format: "int32"
  /sub:
    post:
      operationId: "sub"
      parameters:
      - in: "body"
        name: "subBody"
        required: false
        schema:
          $ref: "#/definitions/subBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "integer"
            format: "int32"
  /divide:
    post:
      operationId: "divide"
      parameters:
      - in: "body"
        name: "divideBody"
        required: false
        schema:
          $ref: "#/definitions/divideBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "integer"
            format: "int32"
  /multi:
    post:
      operationId: "multi"
      parameters:
      - in: "body"
        name: "multiBody"
        required: false
        schema:
          $ref: "#/definitions/multiBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "integer"
            format: "int32"
definitions:
  addBody:
    type: "object"
    properties:
      a:
        type: "integer"
        format: "int32"
      b:
        type: "integer"
        format: "int32"
    x-java-class: "cse.gen.hellotest.hello.codeFirstCompute.addBody"
  divideBody:
    type: "object"
    properties:
      a:
        type: "integer"
        format: "int32"
      b:
        type: "integer"
        format: "int32"
    x-java-class: "cse.gen.hellotest.hello.codeFirstCompute.divideBody"
  multiBody:
    type: "object"
    properties:
      a:
        type: "integer"
        format: "int32"
      b:
        type: "integer"
        format: "int32"
    x-java-class: "cse.gen.hellotest.hello.codeFirstCompute.multiBody"
  subBody:
    type: "object"
    properties:
      a:
        type: "integer"
        format: "int32"
      b:
        type: "integer"
        format: "int32"
    x-java-class: "cse.gen.hellotest.hello.codeFirstCompute.subBody"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:92)
[2017-06-15 17:45:31,528/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]register schema hellotest/hello/codeFirstCompute io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:89)
[2017-06-15 17:45:31,544/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][WARN]Bad practice, low performance, convert from class io.servicecomb.samples.pojo.models.Person to class java.lang.String io.servicecomb.swagger.invocation.converter.ConverterMgr.findConverter(ConverterMgr.java:102)
[2017-06-15 17:45:31,545/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][WARN]Bad practice, low performance, convert from class io.servicecomb.samples.pojo.models.Person to class cse.gen.hellotest.hello.hello.sayHello.Person io.servicecomb.swagger.invocation.converter.ConverterMgr.findConverter(ConverterMgr.java:102)
[2017-06-15 17:45:33,102/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]add hostName:zhenghaibodembp,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:91)
[2017-06-15 17:45:33,103/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]add hostName:zhenghaibodeMBP,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:50)
[2017-06-15 17:45:33,105/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][WARN]address 0.0.0.0:7070?login=true, auto select a host address to publish 192.168.43.19:7070, maybe not the correct one io.servicecomb.serviceregistry.RegistryUtils.getPublishAddress(RegistryUtils.java:554)
[2017-06-15 17:45:33,451/CST][vert.x-eventloop-thread-0][INFO]highway listen success. address=0.0.0.0:7070 io.servicecomb.transport.highway.HighwayServerVerticle.lambda$startListen$0(HighwayServerVerticle.java:68)
[2017-06-15 17:45:33,453/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]endpoint to publish: highway://192.168.43.19:7070?login=true io.servicecomb.core.transport.TransportManager.init(TransportManager.java:52)
[2017-06-15 17:45:33,457/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][WARN]address 0.0.0.0:8080, auto select a host address to publish 192.168.43.19:8080, maybe not the correct one io.servicecomb.serviceregistry.RegistryUtils.getPublishAddress(RegistryUtils.java:554)
[2017-06-15 17:45:33,460/CST][vert.x-eventloop-thread-2][INFO]set uploads directory to null io.servicecomb.transport.rest.vertx.RestServerVerticle.init(RestServerVerticle.java:68)
[2017-06-15 17:45:33,486/CST][vert.x-eventloop-thread-2][INFO]rest listen success. address=0.0.0.0:8080 io.servicecomb.transport.rest.vertx.RestServerVerticle.lambda$startListen$0(RestServerVerticle.java:97)
[2017-06-15 17:45:33,486/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]endpoint to publish: rest://192.168.43.19:8080 io.servicecomb.core.transport.TransportManager.init(TransportManager.java:52)
[2017-06-15 17:45:33,487/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][WARN]address 0.0.0.0:8080, auto select a host address to publish 192.168.43.19:8080, maybe not the correct one io.servicecomb.serviceregistry.RegistryUtils.getPublishAddress(RegistryUtils.java:554)
[2017-06-15 17:45:33,487/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]endpoint to publish: rest://192.168.43.19:8080 io.servicecomb.core.transport.TransportManager.init(TransportManager.java:52)
[2017-06-15 17:45:33,488/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]on schema loaded, new schema. hello:hello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-15 17:45:33,494/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]on schema loaded, new schema. hello:codeFirstCompute io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-15 17:45:33,496/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]It is running in the normal mode, a separated service registry is required io.servicecomb.serviceregistry.client.RegistryClientFactory.getRegistryClient(RegistryClientFactory.java:60)
[2017-06-15 17:45:33,660/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Microservice exists in service center, no need to register. id=2 appId=hellotest, name=hello, version=0.0.1 io.servicecomb.serviceregistry.RegistryUtils.regsiterMicroservice(RegistryUtils.java:311)
[2017-06-15 17:45:33,668/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]SchemaIds is equals to service center. id=2 appId=hellotest, name=hello, version=0.0.1, schemaIds=[hello, codeFirstCompute] io.servicecomb.serviceregistry.RegistryUtils.checkSchemaIdSet(RegistryUtils.java:365)
[2017-06-15 17:45:33,670/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]schemaId hello exists true io.servicecomb.serviceregistry.RegistryUtils.registerSchemas(RegistryUtils.java:294)
[2017-06-15 17:45:33,673/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]schemaId codeFirstCompute exists true io.servicecomb.serviceregistry.RegistryUtils.registerSchemas(RegistryUtils.java:294)
[2017-06-15 17:45:33,732/CST][io.servicecomb.samples.pojo.server.PojoServer.main()][INFO]Register microservice instance success. microserviceId=2 instanceId=4 endpoints=[highway://192.168.43.19:7070?login=true, rest://192.168.43.19:8080, rest://192.168.43.19:8080] lease 120s io.servicecomb.serviceregistry.RegistryUtils.regsiterInstance(RegistryUtils.java:246)
[2017-06-15 17:45:33,775/CST][vert.x-eventloop-thread-2][INFO]watching microservice 2 successfully, the chosen service center address is 127.0.0.1:9980 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$watch$4(ServiceRegistryClientImpl.java:477)
[2017-06-15 17:45:49,907/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Write merged log4j config file to /Users/zhenghaibo/git/samples/pojo-sample/target/classes/config/merged.log4j.properties io.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:102)
[2017-06-15 17:45:49,967/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@11ba3aef: startup date [Thu Jun 15 17:45:49 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2017-06-15 17:45:50,002/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/java-chassis-core/0.1.0-m2-SNAPSHOT/java-chassis-core-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 17:45:50,288/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-common/0.1.0-m2-SNAPSHOT/foundation-common-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 17:45:50,302/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-config/0.1.0-m2-SNAPSHOT/foundation-config-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 17:45:50,319/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-metrics/0.1.0-m2-SNAPSHOT/foundation-metrics-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 17:45:50,335/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-vertx/0.1.0-m2-SNAPSHOT/foundation-vertx-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 17:45:50,350/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/transport-rest-client/0.1.0-m2-SNAPSHOT/transport-rest-client-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 17:45:50,482/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/java-chassis-core/0.1.0-m2-SNAPSHOT/java-chassis-core-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 17:45:50,607/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-common/0.1.0-m2-SNAPSHOT/foundation-common-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 17:45:50,617/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-config/0.1.0-m2-SNAPSHOT/foundation-config-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 17:45:50,626/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-metrics/0.1.0-m2-SNAPSHOT/foundation-metrics-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 17:45:50,637/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-vertx/0.1.0-m2-SNAPSHOT/foundation-vertx-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 17:45:50,649/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/transport-rest-client/0.1.0-m2-SNAPSHOT/transport-rest-client-0.1.0-m2-SNAPSHOT.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-15 17:45:50,774/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2017-06-15 17:45:50,775/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2017-06-15 17:45:50,851/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]config center URL is missing, skip to load configuration from config center io.servicecomb.config.ConfigurationSpringInitializer.<init>(ConfigurationSpringInitializer.java:80)
[2017-06-15 17:45:50,863/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][WARN]Configuration installed by others, will ignore this configuration. io.servicecomb.config.ConfigurationSpringInitializer.<init>(ConfigurationSpringInitializer.java:46)
[2017-06-15 17:45:51,393/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2017-06-15 17:45:51,695/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-15 17:45:51,696/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.jaxrs.JaxrsSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-15 17:45:51,696/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.pojo.PojoSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-15 17:45:51,820/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2017-06-15 17:45:51,820/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2017-06-15 17:45:52,059/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]generate swagger for hellotest/helloClient/hello, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.samples.pojo.server.HelloImpl"
  x-java-interface: "cse.gen.hellotest.helloClient.hello.HelloImplIntf"
basePath: "/HelloImpl"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /sayHello:
    post:
      operationId: "sayHello"
      parameters:
      - in: "body"
        name: "person"
        required: false
        schema:
          $ref: "#/definitions/Person"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
  /sayHi:
    post:
      operationId: "sayHi"
      parameters:
      - in: "body"
        name: "name"
        required: false
        schema:
          $ref: "#/definitions/sayHiBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
definitions:
  Person:
    type: "object"
    properties:
      name:
        type: "string"
    x-java-class: "io.servicecomb.samples.pojo.models.Person"
  sayHiBody:
    type: "object"
    properties:
      name:
        type: "string"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:92)
[2017-06-15 17:45:52,059/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]register schema hellotest/helloClient/hello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:89)
[2017-06-15 17:45:52,094/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]generate swagger for hellotest/helloClient/codeFirstCompute, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.samples.pojo.server.CodeFirstComputeImpl"
  x-java-interface: "cse.gen.hellotest.helloClient.codeFirstCompute.CodeFirstComputeImplIntf"
basePath: "/CodeFirstComputeImpl"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /add:
    post:
      operationId: "add"
      parameters:
      - in: "body"
        name: "addBody"
        required: false
        schema:
          $ref: "#/definitions/addBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "integer"
            format: "int32"
  /sub:
    post:
      operationId: "sub"
      parameters:
      - in: "body"
        name: "subBody"
        required: false
        schema:
          $ref: "#/definitions/subBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "integer"
            format: "int32"
  /divide:
    post:
      operationId: "divide"
      parameters:
      - in: "body"
        name: "divideBody"
        required: false
        schema:
          $ref: "#/definitions/divideBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "integer"
            format: "int32"
  /multi:
    post:
      operationId: "multi"
      parameters:
      - in: "body"
        name: "multiBody"
        required: false
        schema:
          $ref: "#/definitions/multiBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "integer"
            format: "int32"
definitions:
  addBody:
    type: "object"
    properties:
      a:
        type: "integer"
        format: "int32"
      b:
        type: "integer"
        format: "int32"
    x-java-class: "cse.gen.hellotest.helloClient.codeFirstCompute.addBody"
  divideBody:
    type: "object"
    properties:
      a:
        type: "integer"
        format: "int32"
      b:
        type: "integer"
        format: "int32"
    x-java-class: "cse.gen.hellotest.helloClient.codeFirstCompute.divideBody"
  multiBody:
    type: "object"
    properties:
      a:
        type: "integer"
        format: "int32"
      b:
        type: "integer"
        format: "int32"
    x-java-class: "cse.gen.hellotest.helloClient.codeFirstCompute.multiBody"
  subBody:
    type: "object"
    properties:
      a:
        type: "integer"
        format: "int32"
      b:
        type: "integer"
        format: "int32"
    x-java-class: "cse.gen.hellotest.helloClient.codeFirstCompute.subBody"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:92)
[2017-06-15 17:45:52,096/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]register schema hellotest/helloClient/codeFirstCompute io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:89)
[2017-06-15 17:45:52,114/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Found schema ids local, hellotest:hello:[hello] io.servicecomb.core.definition.schema.ConsumerSchemaFactory.findLocalSchemas(ConsumerSchemaFactory.java:103)
[2017-06-15 17:45:52,115/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]It is running in the normal mode, a separated service registry is required io.servicecomb.serviceregistry.client.RegistryClientFactory.getRegistryClient(RegistryClientFactory.java:60)
[2017-06-15 17:45:52,135/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]add hostName:zhenghaibodembp,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:91)
[2017-06-15 17:45:52,136/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]add hostName:zhenghaibodeMBP,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:50)
[2017-06-15 17:45:52,585/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Found schema ids from service center, hellotest:hello:0.0.1:[hello, codeFirstCompute] io.servicecomb.core.definition.schema.ConsumerSchemaFactory.findMicroservice(ConsumerSchemaFactory.java:128)
[2017-06-15 17:45:52,628/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]register schema hellotest/hello/hello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:89)
[2017-06-15 17:45:52,634/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]load schema from service center, microservice=hellotest:hello:0.0.1, schemaId=codeFirstCompute, result=true io.servicecomb.core.definition.schema.ConsumerSchemaFactory.loadSwagger(ConsumerSchemaFactory.java:177)
[2017-06-15 17:45:52,641/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]register schema hellotest/hello/codeFirstCompute io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:89)
[2017-06-15 17:45:52,645/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]on schema loaded, new schema. hello:hello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-15 17:45:52,653/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]on schema loaded, new schema. hello:codeFirstCompute io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-15 17:45:52,655/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][WARN]Bad practice, low performance, convert from class io.servicecomb.samples.pojo.models.Person to class java.lang.String io.servicecomb.swagger.invocation.converter.ConverterMgr.findConverter(ConverterMgr.java:102)
[2017-06-15 17:45:52,655/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][WARN]Bad practice, low performance, convert from class io.servicecomb.samples.pojo.models.Person to class cse.gen.hellotest.hello.hello.sayHello.Person io.servicecomb.swagger.invocation.converter.ConverterMgr.findConverter(ConverterMgr.java:102)
[2017-06-15 17:45:52,662/CST][vert.x-eventloop-thread-0][WARN]highway listen address is not configured, will not listen. io.servicecomb.transport.highway.HighwayServerVerticle.startListen(HighwayServerVerticle.java:59)
[2017-06-15 17:45:52,666/CST][vert.x-eventloop-thread-2][INFO]set uploads directory to null io.servicecomb.transport.rest.vertx.RestServerVerticle.init(RestServerVerticle.java:68)
[2017-06-15 17:45:52,666/CST][vert.x-eventloop-thread-2][WARN]rest listen address is not configured, will not start. io.servicecomb.transport.rest.vertx.RestServerVerticle.start(RestServerVerticle.java:77)
[2017-06-15 17:45:52,667/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][WARN]address 0.0.0.0:8080, auto select a host address to publish 192.168.43.19:8080, maybe not the correct one io.servicecomb.serviceregistry.RegistryUtils.getPublishAddress(RegistryUtils.java:554)
[2017-06-15 17:45:52,667/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]endpoint to publish: rest://192.168.43.19:8080 io.servicecomb.core.transport.TransportManager.init(TransportManager.java:52)
[2017-06-15 17:45:52,669/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]on schema loaded, new schema. helloClient:hello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-15 17:45:52,670/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]on schema loaded, new schema. helloClient:codeFirstCompute io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-15 17:45:52,670/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]on schema loaded, exists schema. hello:hello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:46)
[2017-06-15 17:45:52,670/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]on schema loaded, exists schema. hello:codeFirstCompute io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:46)
[2017-06-15 17:45:52,674/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Microservice exists in service center, no need to register. id=3 appId=hellotest, name=helloClient, version=0.0.1 io.servicecomb.serviceregistry.RegistryUtils.regsiterMicroservice(RegistryUtils.java:311)
[2017-06-15 17:45:52,677/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]SchemaIds is equals to service center. id=3 appId=hellotest, name=helloClient, version=0.0.1, schemaIds=[hello, codeFirstCompute] io.servicecomb.serviceregistry.RegistryUtils.checkSchemaIdSet(RegistryUtils.java:365)
[2017-06-15 17:45:52,682/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]schemaId hello exists true io.servicecomb.serviceregistry.RegistryUtils.registerSchemas(RegistryUtils.java:294)
[2017-06-15 17:45:52,684/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]schemaId codeFirstCompute exists true io.servicecomb.serviceregistry.RegistryUtils.registerSchemas(RegistryUtils.java:294)
[2017-06-15 17:45:52,769/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Register microservice instance success. microserviceId=3 instanceId=5 endpoints=[rest://192.168.43.19:8080] lease 120s io.servicecomb.serviceregistry.RegistryUtils.regsiterInstance(RegistryUtils.java:246)
[2017-06-15 17:45:52,808/CST][vert.x-eventloop-thread-2][INFO]watching microservice 3 successfully, the chosen service center address is 127.0.0.1:9980 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$watch$4(ServiceRegistryClientImpl.java:477)
[2017-06-15 17:45:52,958/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]Using loadbalance rule [com.netflix.loadbalancer.RoundRobinRule] for service [hello,]. io.servicecomb.loadbalance.LoadbalanceHandler.createLoadBalancer(LoadbalanceHandler.java:291)
[2017-06-15 17:45:53,129/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]find instances[1] from service center success. service=hellotest/hello io.servicecomb.serviceregistry.RegistryUtils.findServiceInstance(RegistryUtils.java:421)
[2017-06-15 17:45:53,129/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]service id=2, instance id=4, endpoints=[highway://192.168.43.19:7070?login=true, rest://192.168.43.19:8080, rest://192.168.43.19:8080] io.servicecomb.serviceregistry.RegistryUtils.findServiceInstance(RegistryUtils.java:426)
[2017-06-15 17:45:53,318/CST][io.servicecomb.samples.pojo.client.PojoClient.main()][INFO]connecting to address /192.168.43.19:7070 io.servicecomb.foundation.vertx.client.tcp.TcpClientConnection.connect(TcpClientConnection.java:126)
[2017-06-15 17:45:53,326/CST][vert.x-eventloop-thread-9][INFO]connect to address /192.168.43.19:7070 success io.servicecomb.foundation.vertx.client.tcp.TcpClientConnection.onConnectSuccess(TcpClientConnection.java:139)
[2017-06-15 17:45:53,330/CST][vert.x-eventloop-thread-9][INFO]try login to address /192.168.43.19:7070 io.servicecomb.foundation.vertx.client.tcp.TcpClientConnection.tryLogin(TcpClientConnection.java:187)
[2017-06-15 17:45:53,331/CST][vert.x-eventloop-thread-0][INFO]connect from 192.168.43.19:57386, in thread vert.x-eventloop-thread-0 io.servicecomb.foundation.vertx.server.TcpServerConnection.init(TcpServerConnection.java:36)
[2017-06-15 17:45:53,431/CST][vert.x-eventloop-thread-9][INFO]login success, address /192.168.43.19:7070 io.servicecomb.foundation.vertx.client.tcp.TcpClientConnection.onLoginResponse(TcpClientConnection.java:211)
[2017-06-15 17:45:53,431/CST][vert.x-eventloop-thread-9][INFO]writting cached buffer to address /192.168.43.19:7070 io.servicecomb.foundation.vertx.client.tcp.TcpClientConnection.onLoginSuccess(TcpClientConnection.java:217)
[2017-06-15 17:46:01,253/CST][metrics][INFO]Cycle stat output:
             call count       msg count        avg tps    avg latency(ms) |[0,20)    [20,100)  [100,300) [300,500) [500,...) 
 io.servicecomb.foundation.metrics.performance.PerfStatMonitorMgr.onCycle(PerfStatMonitorMgr.java:78)
[2017-06-15 17:46:02,239/CST][metrics][INFO]Cycle stat output:
             call count       msg count        avg tps    avg latency(ms) |[0,20)    [20,100)  [100,300) [300,500) [500,...) 
 io.servicecomb.foundation.metrics.performance.PerfStatMonitorMgr.onCycle(PerfStatMonitorMgr.java:78)
[2017-06-15 17:46:21,941/CST][metrics][INFO]Cycle stat output:
             call count       msg count        avg tps    avg latency(ms) |[0,20)    [20,100)  [100,300) [300,500) [500,...) 
 io.servicecomb.foundation.metrics.performance.PerfStatMonitorMgr.onCycle(PerfStatMonitorMgr.java:78)
[2017-06-15 17:46:22,920/CST][metrics][INFO]Cycle stat output:
             call count       msg count        avg tps    avg latency(ms) |[0,20)    [20,100)  [100,300) [300,500) [500,...) 
 io.servicecomb.foundation.metrics.performance.PerfStatMonitorMgr.onCycle(PerfStatMonitorMgr.java:78)
[2017-06-15 17:46:31,321/CST][metrics][INFO]Cycle stat output:
             call count       msg count        avg tps    avg latency(ms) |[0,20)    [20,100)  [100,300) [300,500) [500,...) 
 io.servicecomb.foundation.metrics.performance.PerfStatMonitorMgr.onCycle(PerfStatMonitorMgr.java:78)
[2017-06-15 17:46:32,323/CST][metrics][INFO]Cycle stat output:
             call count       msg count        avg tps    avg latency(ms) |[0,20)    [20,100)  [100,300) [300,500) [500,...) 
 io.servicecomb.foundation.metrics.performance.PerfStatMonitorMgr.onCycle(PerfStatMonitorMgr.java:78)
[2017-06-15 17:46:52,016/CST][metrics][INFO]Cycle stat output:
             call count       msg count        avg tps    avg latency(ms) |[0,20)    [20,100)  [100,300) [300,500) [500,...) 
 io.servicecomb.foundation.metrics.performance.PerfStatMonitorMgr.onCycle(PerfStatMonitorMgr.java:78)
[2017-06-15 17:46:52,997/CST][metrics][INFO]Cycle stat output:
             call count       msg count        avg tps    avg latency(ms) |[0,20)    [20,100)  [100,300) [300,500) [500,...) 
 io.servicecomb.foundation.metrics.performance.PerfStatMonitorMgr.onCycle(PerfStatMonitorMgr.java:78)
[2017-06-15 17:47:01,396/CST][metrics][INFO]Cycle stat output:
             call count       msg count        avg tps    avg latency(ms) |[0,20)    [20,100)  [100,300) [300,500) [500,...) 
 io.servicecomb.foundation.metrics.performance.PerfStatMonitorMgr.onCycle(PerfStatMonitorMgr.java:78)
[2017-06-15 17:47:02,396/CST][metrics][INFO]Cycle stat output:
             call count       msg count        avg tps    avg latency(ms) |[0,20)    [20,100)  [100,300) [300,500) [500,...) 
 io.servicecomb.foundation.metrics.performance.PerfStatMonitorMgr.onCycle(PerfStatMonitorMgr.java:78)
[2017-06-15 17:47:22,079/CST][metrics][INFO]Cycle stat output:
             call count       msg count        avg tps    avg latency(ms) |[0,20)    [20,100)  [100,300) [300,500) [500,...) 
 io.servicecomb.foundation.metrics.performance.PerfStatMonitorMgr.onCycle(PerfStatMonitorMgr.java:78)
[2017-06-15 17:47:23,063/CST][metrics][INFO]Cycle stat output:
             call count       msg count        avg tps    avg latency(ms) |[0,20)    [20,100)  [100,300) [300,500) [500,...) 
 io.servicecomb.foundation.metrics.performance.PerfStatMonitorMgr.onCycle(PerfStatMonitorMgr.java:78)
[2017-06-15 17:47:24,531/CST][Thread-4][WARN]handler chain is shutting down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:86)
[2017-06-15 17:47:24,531/CST][Thread-8][INFO]Closing org.springframework.context.support.ClassPathXmlApplicationContext@11ba3aef: startup date [Thu Jun 15 17:45:49 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987)
[2017-06-15 17:47:24,532/CST][Thread-4][WARN]handler chain is shut down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:97)
[2017-06-15 17:47:24,532/CST][Thread-8][WARN]cse is closing now... io.servicecomb.core.CseApplicationListener.onApplicationEvent(CseApplicationListener.java:115)
[2017-06-15 17:47:24,535/CST][Thread-8][INFO]Unregister microservice instance success. microserviceId=3 instanceId=5 io.servicecomb.serviceregistry.RegistryUtils.unregsiterInstance(RegistryUtils.java:270)
[2017-06-15 17:47:24,535/CST][Thread-8][WARN]cse is closing now... io.servicecomb.core.CseApplicationListener.onApplicationEvent(CseApplicationListener.java:115)
[2017-06-15 17:47:24,548/CST][Thread-8][WARN]Bad Request io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.unregisterMicroserviceInstance(ServiceRegistryClientImpl.java:397)
[2017-06-15 17:47:24,549/CST][Thread-8][ERROR]Unregister microservice instance failed. microserviceId=3 instanceId=5 io.servicecomb.serviceregistry.RegistryUtils.unregsiterInstance(RegistryUtils.java:265)
[2017-06-15 17:47:24,931/CST][vert.x-eventloop-thread-0][ERROR]disconected from 192.168.43.19:57386, in thread vert.x-eventloop-thread-0 io.servicecomb.foundation.vertx.server.TcpServerConnection.lambda$init$1(TcpServerConnection.java:46)
[2017-06-15 17:47:28,185/CST][Thread-4][WARN]handler chain is shutting down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:86)
[2017-06-15 17:47:28,185/CST][Thread-8][INFO]Closing org.springframework.context.support.ClassPathXmlApplicationContext@7e42823d: startup date [Thu Jun 15 17:45:29 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987)
[2017-06-15 17:47:28,185/CST][Thread-4][WARN]handler chain is shut down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:97)
[2017-06-15 17:47:28,186/CST][Thread-8][WARN]cse is closing now... io.servicecomb.core.CseApplicationListener.onApplicationEvent(CseApplicationListener.java:115)
[2017-06-15 17:47:28,193/CST][Thread-8][INFO]Unregister microservice instance success. microserviceId=2 instanceId=4 io.servicecomb.serviceregistry.RegistryUtils.unregsiterInstance(RegistryUtils.java:270)
[2017-06-15 17:47:28,193/CST][Thread-8][WARN]cse is closing now... io.servicecomb.core.CseApplicationListener.onApplicationEvent(CseApplicationListener.java:115)
[2017-06-15 17:47:28,218/CST][Thread-8][WARN]Bad Request io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.unregisterMicroserviceInstance(ServiceRegistryClientImpl.java:397)
[2017-06-15 17:47:28,219/CST][Thread-8][ERROR]Unregister microservice instance failed. microserviceId=2 instanceId=4 io.servicecomb.serviceregistry.RegistryUtils.unregsiterInstance(RegistryUtils.java:265)
[2017-06-16 09:17:07,901/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][INFO]Write merged log4j config file to /Users/zhenghaibo/git/samples/jaxrs-sample/target/classes/config/merged.log4j.properties io.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:98)
[2017-06-16 09:17:08,170/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@494780af: startup date [Fri Jun 16 09:17:08 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2017-06-16 09:17:08,229/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/java-chassis-core/0.1.0-m1/java-chassis-core-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 09:17:08,633/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-config/0.1.0-m1/foundation-config-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 09:17:08,654/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-vertx/0.1.0-m1/foundation-vertx-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 09:17:08,670/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-common/0.1.0-m1/foundation-common-0.1.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 09:17:08,687/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/transport-rest-client/0.1.0-m1/transport-rest-client-0.1.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 09:17:08,865/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2017-06-16 09:17:08,866/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2017-06-16 09:17:08,940/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][INFO]config center URL is missing, skip to load configuration from config center io.servicecomb.config.ConfigurationSpringInitializer.<init>(ConfigurationSpringInitializer.java:80)
[2017-06-16 09:17:09,308/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2017-06-16 09:17:09,431/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-16 09:17:09,432/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.core.DefaultSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-16 09:17:10,132/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][INFO]generate swagger for jaxrstest/jaxrs/jaxrsHello, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.samples.jaxrs.server.JaxrsHelloImpl"
  x-java-interface: "cse.gen.jaxrstest.jaxrs.jaxrsHello.JaxrsHelloImplIntf"
basePath: "/JaxrsHelloImpl"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /sayHello:
    post:
      operationId: "sayHello"
      parameters:
      - in: "body"
        name: "person"
        required: false
        schema:
          $ref: "#/definitions/Person"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
  /sayHi:
    post:
      operationId: "sayHi"
      parameters:
      - in: "body"
        name: "name"
        required: false
        schema:
          $ref: "#/definitions/sayHiBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
definitions:
  Person:
    type: "object"
    properties:
      name:
        type: "string"
    x-java-class: "io.servicecomb.samples.jaxrs.models.Person"
  sayHiBody:
    type: "object"
    properties:
      name:
        type: "string"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:130)
[2017-06-16 09:17:10,133/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][INFO]register schema jaxrstest/jaxrs/jaxrsHello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:86)
[2017-06-16 09:17:10,148/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][INFO]Found schema ids local, jaxrstest:hello:[hello] io.servicecomb.core.definition.schema.ConsumerSchemaFactory.findLocalSchemas(ConsumerSchemaFactory.java:123)
[2017-06-16 09:17:10,150/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][INFO]It is running in the normal mode, a separated service registry is required io.servicecomb.serviceregistry.client.RegistryClientFactory.getRegistryClient(RegistryClientFactory.java:60)
[2017-06-16 09:17:11,400/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][INFO]add hostName:zhenghaibodembp,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:87)
[2017-06-16 09:17:11,402/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][INFO]add hostName:zhenghaibodeMBP,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:50)
[2017-06-16 09:17:11,986/CST][vert.x-eventloop-thread-0][WARN]Version validate failed, rule: { Min: 1, Max: 64, RegEx: ^[0-9]*$|^[0-9]+(\.[0-9]+)*$ } io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:106)
[2017-06-16 09:17:11,986/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][ERROR]can not get microservice id, jaxrstest:hello:latest io.servicecomb.core.definition.schema.ConsumerSchemaFactory.findMicroservice(ConsumerSchemaFactory.java:138)
[2017-06-16 09:17:12,029/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][INFO]register schema jaxrstest/hello/hello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:86)
[2017-06-16 09:17:12,030/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][INFO]on schema loaded, new schema. hello:hello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-16 09:17:12,042/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][WARN]address 0.0.0.0:7070?login=true, auto select a host address to publish 192.168.43.19:7070, maybe not the correct one io.servicecomb.serviceregistry.RegistryUtils.getPublishAddress(RegistryUtils.java:506)
[2017-06-16 09:17:12,073/CST][vert.x-eventloop-thread-0][INFO]highway listen success. address=0.0.0.0:7070 io.servicecomb.transport.highway.HighwayServerVerticle.lambda$startListen$0(HighwayServerVerticle.java:68)
[2017-06-16 09:17:12,074/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][INFO]endpoint to publish: highway://192.168.43.19:7070?login=true io.servicecomb.core.transport.TransportManager.init(TransportManager.java:52)
[2017-06-16 09:17:12,080/CST][vert.x-eventloop-thread-2][WARN]grpc listen address is not configured, will not listen. io.servicecomb.transport.grpc.GrpcVerticle.startListen(GrpcVerticle.java:63)
[2017-06-16 09:17:12,081/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][WARN]address 0.0.0.0:8080, auto select a host address to publish 192.168.43.19:8080, maybe not the correct one io.servicecomb.serviceregistry.RegistryUtils.getPublishAddress(RegistryUtils.java:506)
[2017-06-16 09:17:12,084/CST][vert.x-eventloop-thread-4][INFO]set uploads directory to null io.servicecomb.transport.rest.vertx.RestServerVerticle.init(RestServerVerticle.java:68)
[2017-06-16 09:17:12,106/CST][vert.x-eventloop-thread-4][INFO]rest listen success. address=0.0.0.0:8080 io.servicecomb.transport.rest.vertx.RestServerVerticle.lambda$startListen$0(RestServerVerticle.java:97)
[2017-06-16 09:17:12,108/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][INFO]endpoint to publish: rest://192.168.43.19:8080 io.servicecomb.core.transport.TransportManager.init(TransportManager.java:52)
[2017-06-16 09:17:12,108/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][INFO]on schema loaded, new schema. jaxrs:jaxrsHello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-16 09:17:12,109/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][INFO]on schema loaded, exists schema. hello:hello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:46)
[2017-06-16 09:17:12,118/CST][vert.x-eventloop-thread-0][WARN]service does not exist io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:106)
[2017-06-16 09:17:12,271/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][INFO]Registry Microservice successfully. id=4 appId=jaxrstest, name=jaxrs, version=0.0.1 io.servicecomb.serviceregistry.RegistryUtils.regsiterMicroservice(RegistryUtils.java:326)
[2017-06-16 09:17:12,275/CST][vert.x-eventloop-thread-0][WARN]Schema does not exist io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:106)
[2017-06-16 09:17:12,276/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][INFO]schemaId jaxrsHello exists false io.servicecomb.serviceregistry.RegistryUtils.registerSchemas(RegistryUtils.java:293)
[2017-06-16 09:17:12,282/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][INFO]register schema 4/jaxrsHello, result true io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.registerSchema(ServiceRegistryClientImpl.java:207)
[2017-06-16 09:17:12,386/CST][io.servicecomb.samples.jaxrs.server.JaxrsServer.main()][INFO]Register microservice instance success. microserviceId=4 instanceId=6 endpoints=[highway://192.168.43.19:7070?login=true, rest://192.168.43.19:8080] lease 120s io.servicecomb.serviceregistry.RegistryUtils.regsiterInstance(RegistryUtils.java:245)
[2017-06-16 09:17:12,430/CST][vert.x-eventloop-thread-2][INFO]watching microservice 4 successfully, the chosen service center address is 127.0.0.1:9980 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$watch$4(ServiceRegistryClientImpl.java:470)
[2017-06-16 09:17:34,664/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]Write merged log4j config file to /Users/zhenghaibo/git/samples/jaxrs-sample/target/classes/config/merged.log4j.properties io.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:98)
[2017-06-16 09:17:34,853/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4da2fe8e: startup date [Fri Jun 16 09:17:34 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2017-06-16 09:17:34,899/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/java-chassis-core/0.1.0-m1/java-chassis-core-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 09:17:35,267/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-config/0.1.0-m1/foundation-config-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 09:17:35,290/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-vertx/0.1.0-m1/foundation-vertx-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 09:17:35,322/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-common/0.1.0-m1/foundation-common-0.1.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 09:17:35,346/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/transport-rest-client/0.1.0-m1/transport-rest-client-0.1.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 09:17:35,574/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2017-06-16 09:17:35,574/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2017-06-16 09:17:35,647/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]config center URL is missing, skip to load configuration from config center io.servicecomb.config.ConfigurationSpringInitializer.<init>(ConfigurationSpringInitializer.java:80)
[2017-06-16 09:17:35,948/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2017-06-16 09:17:36,057/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-16 09:17:36,058/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.core.DefaultSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-16 09:17:36,625/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]generate swagger for jaxrstest/helloClient/jaxrsHello, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.samples.jaxrs.server.JaxrsHelloImpl"
  x-java-interface: "cse.gen.jaxrstest.helloClient.jaxrsHello.JaxrsHelloImplIntf"
basePath: "/JaxrsHelloImpl"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /sayHello:
    post:
      operationId: "sayHello"
      parameters:
      - in: "body"
        name: "person"
        required: false
        schema:
          $ref: "#/definitions/Person"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
  /sayHi:
    post:
      operationId: "sayHi"
      parameters:
      - in: "body"
        name: "name"
        required: false
        schema:
          $ref: "#/definitions/sayHiBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
definitions:
  sayHiBody:
    type: "object"
    properties:
      name:
        type: "string"
  Person:
    type: "object"
    properties:
      name:
        type: "string"
    x-java-class: "io.servicecomb.samples.jaxrs.models.Person"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:130)
[2017-06-16 09:17:36,626/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]register schema jaxrstest/helloClient/jaxrsHello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:86)
[2017-06-16 09:17:36,638/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]Found schema ids local, jaxrstest:hello:[hello] io.servicecomb.core.definition.schema.ConsumerSchemaFactory.findLocalSchemas(ConsumerSchemaFactory.java:123)
[2017-06-16 09:17:36,640/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]It is running in the normal mode, a separated service registry is required io.servicecomb.serviceregistry.client.RegistryClientFactory.getRegistryClient(RegistryClientFactory.java:60)
[2017-06-16 09:17:36,906/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]add hostName:zhenghaibodembp,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:87)
[2017-06-16 09:17:36,909/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]add hostName:zhenghaibodeMBP,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:50)
[2017-06-16 09:17:37,353/CST][vert.x-eventloop-thread-0][WARN]Version validate failed, rule: { Min: 1, Max: 64, RegEx: ^[0-9]*$|^[0-9]+(\.[0-9]+)*$ } io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:106)
[2017-06-16 09:17:37,354/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][ERROR]can not get microservice id, jaxrstest:hello:latest io.servicecomb.core.definition.schema.ConsumerSchemaFactory.findMicroservice(ConsumerSchemaFactory.java:138)
[2017-06-16 09:17:37,399/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]register schema jaxrstest/hello/hello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:86)
[2017-06-16 09:17:37,401/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]on schema loaded, new schema. hello:hello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-16 09:17:37,413/CST][vert.x-eventloop-thread-0][WARN]highway listen address is not configured, will not listen. io.servicecomb.transport.highway.HighwayServerVerticle.startListen(HighwayServerVerticle.java:59)
[2017-06-16 09:17:37,417/CST][vert.x-eventloop-thread-2][WARN]grpc listen address is not configured, will not listen. io.servicecomb.transport.grpc.GrpcVerticle.startListen(GrpcVerticle.java:63)
[2017-06-16 09:17:37,420/CST][vert.x-eventloop-thread-4][INFO]set uploads directory to null io.servicecomb.transport.rest.vertx.RestServerVerticle.init(RestServerVerticle.java:68)
[2017-06-16 09:17:37,421/CST][vert.x-eventloop-thread-4][WARN]rest listen address is not configured, will not start. io.servicecomb.transport.rest.vertx.RestServerVerticle.start(RestServerVerticle.java:77)
[2017-06-16 09:17:37,421/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]on schema loaded, new schema. helloClient:jaxrsHello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-16 09:17:37,422/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]on schema loaded, exists schema. hello:hello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:46)
[2017-06-16 09:17:37,427/CST][vert.x-eventloop-thread-0][WARN]service does not exist io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:106)
[2017-06-16 09:17:37,520/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]Registry Microservice successfully. id=5 appId=jaxrstest, name=helloClient, version=0.0.1 io.servicecomb.serviceregistry.RegistryUtils.regsiterMicroservice(RegistryUtils.java:326)
[2017-06-16 09:17:37,522/CST][vert.x-eventloop-thread-0][WARN]Schema does not exist io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:106)
[2017-06-16 09:17:37,523/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]schemaId jaxrsHello exists false io.servicecomb.serviceregistry.RegistryUtils.registerSchemas(RegistryUtils.java:293)
[2017-06-16 09:17:37,528/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]register schema 5/jaxrsHello, result true io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.registerSchema(ServiceRegistryClientImpl.java:207)
[2017-06-16 09:17:37,623/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]Register microservice instance success. microserviceId=5 instanceId=7 endpoints=[] lease 120s io.servicecomb.serviceregistry.RegistryUtils.regsiterInstance(RegistryUtils.java:245)
[2017-06-16 09:17:37,666/CST][vert.x-eventloop-thread-2][INFO]watching microservice 5 successfully, the chosen service center address is 127.0.0.1:9980 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$watch$4(ServiceRegistryClientImpl.java:470)
[2017-06-16 09:17:37,837/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]Using loadbalance rule [com.netflix.loadbalancer.RoundRobinRule] for service [hello,]. io.servicecomb.loadbalance.LoadbalanceHandler.createLoadBalancer(LoadbalanceHandler.java:290)
[2017-06-16 09:17:38,102/CST][vert.x-eventloop-thread-0][WARN]Service does not exist io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:106)
[2017-06-16 09:17:38,102/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][ERROR]find empty instances from service center. service=jaxrstest/hello io.servicecomb.serviceregistry.RegistryUtils.findServiceInstance(RegistryUtils.java:383)
[2017-06-16 09:17:38,181/CST][vert.x-eventloop-thread-0][WARN]Service does not exist io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:106)
[2017-06-16 09:17:38,182/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][ERROR]find empty instances from service center. service=jaxrstest/hello io.servicecomb.serviceregistry.RegistryUtils.findServiceInstance(RegistryUtils.java:383)
[2017-06-16 09:17:38,182/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][WARN]No up servers available from load balancer: io.servicecomb.loadbalance.LoadBalancer@3916e919 com.netflix.loadbalancer.RoundRobinRule.choose(RoundRobinRule.java:66)
[2017-06-16 09:17:38,185/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][ERROR]
Exception: io.servicecomb.core.exception.CseException; No available address found. microserviceName=hello, version=latest, transportName=
ServiceDefinitionException Code:cse.lb.no.available.address, Message:No available address found. microserviceName=hello, version=latest, transportName=
	at io.servicecomb.core.exception.ExceptionUtils.createCseException(ExceptionUtils.java:61)
	at io.servicecomb.core.exception.ExceptionUtils.lbAddressNotFound(ExceptionUtils.java:98)
	at io.servicecomb.loadbalance.LoadbalanceHandler.send(LoadbalanceHandler.java:150)
	at io.servicecomb.loadbalance.LoadbalanceHandler.handle(LoadbalanceHandler.java:94)
	at io.servicecomb.core.Invocation.next(Invocation.java:128)
	at io.servicecomb.bizkeeper.BizkeeperCommand.lambda$construct$2(BizkeeperCommand.java:89)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:50)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:50)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:8666)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:52)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:36)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:50)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:50)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:50)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:50)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:50)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:50)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:50)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:8666)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:52)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:36)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:50)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:50)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:50)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:50)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:8759)
	at rx.Observable.subscribe(Observable.java:8726)
	at rx.Observable.subscribe(Observable.java:8619)
	at io.servicecomb.bizkeeper.BizkeeperHandler.handle(BizkeeperHandler.java:70)
	at io.servicecomb.core.Invocation.next(Invocation.java:128)
	at io.servicecomb.core.handler.ShutdownHookHandler.handle(ShutdownHookHandler.java:64)
	at io.servicecomb.core.Invocation.next(Invocation.java:128)
	at io.servicecomb.core.provider.consumer.InvokerUtils.innerSyncInvoke(InvokerUtils.java:67)
	at io.servicecomb.provider.pojo.Invoker.invoke(Invoker.java:54)
	at com.sun.proxy.$Proxy36.sayHi(Unknown Source)
	at io.servicecomb.samples.jaxrs.client.JaxrsClient.main(JaxrsClient.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.mojo.exec.ExecJavaMojo$1.run(ExecJavaMojo.java:294)
	at java.lang.Thread.run(Thread.java:745)
 io.servicecomb.core.exception.ExceptionUtils.createCseException(ExceptionUtils.java:62)
[2017-06-16 09:17:38,197/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][WARN]bizkeeper command failed due to:InvocationException: code=490;msg=CommonExceptionData [message=Cse Internal Bad Request] io.servicecomb.bizkeeper.BizkeeperCommand.lambda$null$1(BizkeeperCommand.java:92)
[2017-06-16 09:17:38,204/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]fallback called. io.servicecomb.bizkeeper.BizkeeperCommand.lambda$resumeWithFallback$0(BizkeeperCommand.java:63)
[2017-06-16 09:18:49,127/CST][Thread-2][WARN]handler chain is shutting down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:82)
[2017-06-16 09:18:49,128/CST][Thread-6][INFO]Closing org.springframework.context.support.ClassPathXmlApplicationContext@4da2fe8e: startup date [Fri Jun 16 09:17:34 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987)
[2017-06-16 09:18:49,128/CST][Thread-2][WARN]handler chain is shut down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:93)
[2017-06-16 09:18:49,130/CST][Thread-6][WARN]cse is closing now... io.servicecomb.core.CseApplicationListener.onApplicationEvent(CseApplicationListener.java:115)
[2017-06-16 09:18:49,137/CST][Thread-6][INFO]Unregister microservice instance success. microserviceId=5 instanceId=7 io.servicecomb.serviceregistry.RegistryUtils.unregsiterInstance(RegistryUtils.java:269)
[2017-06-16 09:18:55,159/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]Write merged log4j config file to /Users/zhenghaibo/git/samples/jaxrs-sample/target/classes/config/merged.log4j.properties io.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:98)
[2017-06-16 09:18:55,230/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@36d62d70: startup date [Fri Jun 16 09:18:55 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2017-06-16 09:18:55,276/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/java-chassis-core/0.1.0-m1/java-chassis-core-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 09:18:55,669/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-config/0.1.0-m1/foundation-config-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 09:18:55,699/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-vertx/0.1.0-m1/foundation-vertx-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 09:18:55,726/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-common/0.1.0-m1/foundation-common-0.1.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 09:18:55,766/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/transport-rest-client/0.1.0-m1/transport-rest-client-0.1.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 09:18:55,973/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2017-06-16 09:18:55,974/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2017-06-16 09:18:56,056/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]config center URL is missing, skip to load configuration from config center io.servicecomb.config.ConfigurationSpringInitializer.<init>(ConfigurationSpringInitializer.java:80)
[2017-06-16 09:18:56,465/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2017-06-16 09:18:56,577/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-16 09:18:56,578/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.core.DefaultSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-16 09:18:57,134/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]generate swagger for jaxrstest/helloClient/jaxrsHello, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.samples.jaxrs.server.JaxrsHelloImpl"
  x-java-interface: "cse.gen.jaxrstest.helloClient.jaxrsHello.JaxrsHelloImplIntf"
basePath: "/JaxrsHelloImpl"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /sayHello:
    post:
      operationId: "sayHello"
      parameters:
      - in: "body"
        name: "person"
        required: false
        schema:
          $ref: "#/definitions/Person"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
  /sayHi:
    post:
      operationId: "sayHi"
      parameters:
      - in: "body"
        name: "name"
        required: false
        schema:
          $ref: "#/definitions/sayHiBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
definitions:
  sayHiBody:
    type: "object"
    properties:
      name:
        type: "string"
  Person:
    type: "object"
    properties:
      name:
        type: "string"
    x-java-class: "io.servicecomb.samples.jaxrs.models.Person"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:130)
[2017-06-16 09:18:57,135/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]register schema jaxrstest/helloClient/jaxrsHello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:86)
[2017-06-16 09:18:57,145/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]Found schema ids local, jaxrstest:jaxrs:[] io.servicecomb.core.definition.schema.ConsumerSchemaFactory.findLocalSchemas(ConsumerSchemaFactory.java:123)
[2017-06-16 09:18:57,147/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]It is running in the normal mode, a separated service registry is required io.servicecomb.serviceregistry.client.RegistryClientFactory.getRegistryClient(RegistryClientFactory.java:60)
[2017-06-16 09:18:57,276/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]add hostName:zhenghaibodembp,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:87)
[2017-06-16 09:18:57,278/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]add hostName:zhenghaibodeMBP,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:50)
[2017-06-16 09:18:57,782/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]Found schema ids from service center, jaxrstest:jaxrs:0.0.1:[jaxrsHello] io.servicecomb.core.definition.schema.ConsumerSchemaFactory.findMicroservice(ConsumerSchemaFactory.java:148)
[2017-06-16 09:18:57,787/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]load schema from service center, microservice=jaxrstest:jaxrs:0.0.1, schemaId=jaxrsHello, result=true io.servicecomb.core.definition.schema.ConsumerSchemaFactory.loadSwagger(ConsumerSchemaFactory.java:273)
[2017-06-16 09:18:57,829/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]register schema jaxrstest/jaxrs/jaxrsHello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:86)
[2017-06-16 09:18:57,832/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]on schema loaded, new schema. jaxrs:jaxrsHello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-16 09:18:57,844/CST][vert.x-eventloop-thread-0][WARN]highway listen address is not configured, will not listen. io.servicecomb.transport.highway.HighwayServerVerticle.startListen(HighwayServerVerticle.java:59)
[2017-06-16 09:18:57,847/CST][vert.x-eventloop-thread-2][WARN]grpc listen address is not configured, will not listen. io.servicecomb.transport.grpc.GrpcVerticle.startListen(GrpcVerticle.java:63)
[2017-06-16 09:18:57,850/CST][vert.x-eventloop-thread-4][INFO]set uploads directory to null io.servicecomb.transport.rest.vertx.RestServerVerticle.init(RestServerVerticle.java:68)
[2017-06-16 09:18:57,850/CST][vert.x-eventloop-thread-4][WARN]rest listen address is not configured, will not start. io.servicecomb.transport.rest.vertx.RestServerVerticle.start(RestServerVerticle.java:77)
[2017-06-16 09:18:57,851/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]on schema loaded, exists schema. jaxrs:jaxrsHello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:46)
[2017-06-16 09:18:57,851/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]on schema loaded, new schema. helloClient:jaxrsHello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-16 09:18:57,856/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]Microservice exists in service center, no need to register. id=5 appId=jaxrstest, name=helloClient, version=0.0.1 io.servicecomb.serviceregistry.RegistryUtils.regsiterMicroservice(RegistryUtils.java:311)
[2017-06-16 09:18:57,862/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]schemaId jaxrsHello exists true io.servicecomb.serviceregistry.RegistryUtils.registerSchemas(RegistryUtils.java:293)
[2017-06-16 09:18:57,933/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]Register microservice instance success. microserviceId=5 instanceId=8 endpoints=[] lease 120s io.servicecomb.serviceregistry.RegistryUtils.regsiterInstance(RegistryUtils.java:245)
[2017-06-16 09:18:57,967/CST][vert.x-eventloop-thread-2][INFO]watching microservice 5 successfully, the chosen service center address is 127.0.0.1:9980 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$watch$4(ServiceRegistryClientImpl.java:470)
[2017-06-16 09:18:58,082/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]Using loadbalance rule [com.netflix.loadbalancer.RoundRobinRule] for service [jaxrs,]. io.servicecomb.loadbalance.LoadbalanceHandler.createLoadBalancer(LoadbalanceHandler.java:290)
[2017-06-16 09:18:58,270/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]find instances[1] from service center success. service=jaxrstest/jaxrs io.servicecomb.serviceregistry.RegistryUtils.findServiceInstance(RegistryUtils.java:387)
[2017-06-16 09:18:58,426/CST][io.servicecomb.samples.jaxrs.client.JaxrsClient.main()][INFO]connecting to address /192.168.43.19:7070 io.servicecomb.foundation.vertx.client.tcp.TcpClient.connect(TcpClient.java:107)
[2017-06-16 09:18:58,434/CST][vert.x-eventloop-thread-9][INFO]connect to address /192.168.43.19:7070 success io.servicecomb.foundation.vertx.client.tcp.TcpClient.onConnectSuccess(TcpClient.java:120)
[2017-06-16 09:18:58,438/CST][vert.x-eventloop-thread-9][INFO]try login to address /192.168.43.19:7070 io.servicecomb.foundation.vertx.client.tcp.TcpClient.tryLogin(TcpClient.java:171)
[2017-06-16 09:18:58,444/CST][vert.x-eventloop-thread-0][INFO]connect from 192.168.43.19:58434, in thread vert.x-eventloop-thread-0 io.servicecomb.foundation.vertx.server.TcpServerConnection.init(TcpServerConnection.java:36)
[2017-06-16 09:18:58,555/CST][vert.x-eventloop-thread-9][INFO]login success, address /192.168.43.19:7070 io.servicecomb.foundation.vertx.client.tcp.TcpClient.onLoginResponse(TcpClient.java:195)
[2017-06-16 09:18:58,555/CST][vert.x-eventloop-thread-9][INFO]writting cached buffer to address /192.168.43.19:7070 io.servicecomb.foundation.vertx.client.tcp.TcpClient.onLoginSuccess(TcpClient.java:201)
[2017-06-16 09:19:02,566/CST][Thread-2][WARN]handler chain is shutting down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:82)
[2017-06-16 09:19:02,566/CST][Thread-6][INFO]Closing org.springframework.context.support.ClassPathXmlApplicationContext@36d62d70: startup date [Fri Jun 16 09:18:55 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987)
[2017-06-16 09:19:02,567/CST][Thread-2][WARN]handler chain is shut down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:93)
[2017-06-16 09:19:02,567/CST][Thread-6][WARN]cse is closing now... io.servicecomb.core.CseApplicationListener.onApplicationEvent(CseApplicationListener.java:115)
[2017-06-16 09:19:02,572/CST][Thread-6][INFO]Unregister microservice instance success. microserviceId=5 instanceId=8 io.servicecomb.serviceregistry.RegistryUtils.unregsiterInstance(RegistryUtils.java:269)
[2017-06-16 09:19:02,944/CST][vert.x-eventloop-thread-0][ERROR]disconected from 192.168.43.19:58434, in thread vert.x-eventloop-thread-0 io.servicecomb.foundation.vertx.server.TcpServerConnection.lambda$init$1(TcpServerConnection.java:46)
[2017-06-16 09:30:54,911/CST][Thread-2][WARN]handler chain is shutting down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:82)
[2017-06-16 09:30:54,912/CST][Thread-6][INFO]Closing org.springframework.context.support.ClassPathXmlApplicationContext@494780af: startup date [Fri Jun 16 09:17:08 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987)
[2017-06-16 09:30:54,914/CST][Thread-2][WARN]handler chain is shut down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:93)
[2017-06-16 09:30:54,916/CST][Thread-6][WARN]cse is closing now... io.servicecomb.core.CseApplicationListener.onApplicationEvent(CseApplicationListener.java:115)
[2017-06-16 09:30:54,921/CST][Thread-6][INFO]Unregister microservice instance success. microserviceId=4 instanceId=6 io.servicecomb.serviceregistry.RegistryUtils.unregsiterInstance(RegistryUtils.java:269)
[2017-06-16 09:35:25,125/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]Write merged log4j config file to /Users/zhenghaibo/git/samples/springmvc-sample/target/classes/config/merged.log4j.properties io.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:98)
[2017-06-16 09:35:25,194/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@61b4b73f: startup date [Fri Jun 16 09:35:25 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2017-06-16 09:35:25,234/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/java-chassis-core/0.1.0-m1/java-chassis-core-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 09:35:25,516/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-config/0.1.0-m1/foundation-config-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 09:35:25,538/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-vertx/0.1.0-m1/foundation-vertx-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 09:35:25,555/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-common/0.1.0-m1/foundation-common-0.1.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 09:35:25,571/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/transport-rest-client/0.1.0-m1/transport-rest-client-0.1.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 09:35:25,735/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2017-06-16 09:35:25,736/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2017-06-16 09:35:25,790/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]config center URL is missing, skip to load configuration from config center io.servicecomb.config.ConfigurationSpringInitializer.<init>(ConfigurationSpringInitializer.java:80)
[2017-06-16 09:35:26,110/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2017-06-16 09:35:26,199/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-16 09:35:26,199/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.core.DefaultSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-16 09:37:13,096/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]Write merged log4j config file to /Users/zhenghaibo/git/samples/springmvc-sample/target/classes/config/merged.log4j.properties io.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:98)
[2017-06-16 09:37:13,164/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@17d2bba9: startup date [Fri Jun 16 09:37:13 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2017-06-16 09:37:13,201/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/java-chassis-core/0.1.0-m1/java-chassis-core-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 09:37:13,492/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-config/0.1.0-m1/foundation-config-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 09:37:13,513/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-vertx/0.1.0-m1/foundation-vertx-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 09:37:13,531/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-common/0.1.0-m1/foundation-common-0.1.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 09:37:13,549/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/transport-rest-client/0.1.0-m1/transport-rest-client-0.1.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 09:37:13,708/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2017-06-16 09:37:13,708/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2017-06-16 09:37:13,761/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]config center URL is missing, skip to load configuration from config center io.servicecomb.config.ConfigurationSpringInitializer.<init>(ConfigurationSpringInitializer.java:80)
[2017-06-16 09:37:14,070/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2017-06-16 09:37:14,153/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-16 09:37:14,153/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.core.DefaultSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-16 09:37:14,567/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]generate swagger for springmvctest/springmvc/springmvcHello, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.samples.springmvc.server.SpringmvcHelloImpl"
  x-java-interface: "cse.gen.springmvctest.springmvc.springmvcHello.SpringmvcHelloImplIntf"
basePath: "/springmvchello"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /sayhello:
    post:
      operationId: "sayHello"
      parameters:
      - in: "body"
        name: "person"
        required: false
        schema:
          $ref: "#/definitions/Person"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
  /sayhi:
    post:
      operationId: "sayHi"
      parameters:
      - name: "name"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
definitions:
  Person:
    type: "object"
    properties:
      name:
        type: "string"
    x-java-class: "io.servicecomb.samples.springmvc.models.Person"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:130)
[2017-06-16 09:37:14,568/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]register schema springmvctest/springmvc/springmvcHello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:86)
[2017-06-16 09:37:14,599/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]add hostName:zhenghaibodembp,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:87)
[2017-06-16 09:37:14,600/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]add hostName:zhenghaibodeMBP,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:50)
[2017-06-16 09:37:14,602/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][WARN]address 0.0.0.0:7070?login=true, auto select a host address to publish 192.168.43.19:7070, maybe not the correct one io.servicecomb.serviceregistry.RegistryUtils.getPublishAddress(RegistryUtils.java:506)
[2017-06-16 09:37:14,923/CST][vert.x-eventloop-thread-0][INFO]highway listen success. address=0.0.0.0:7070 io.servicecomb.transport.highway.HighwayServerVerticle.lambda$startListen$0(HighwayServerVerticle.java:68)
[2017-06-16 09:37:14,925/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]endpoint to publish: highway://192.168.43.19:7070?login=true io.servicecomb.core.transport.TransportManager.init(TransportManager.java:52)
[2017-06-16 09:37:14,931/CST][vert.x-eventloop-thread-2][WARN]grpc listen address is not configured, will not listen. io.servicecomb.transport.grpc.GrpcVerticle.startListen(GrpcVerticle.java:63)
[2017-06-16 09:37:14,932/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][WARN]address 0.0.0.0:8080, auto select a host address to publish 192.168.43.19:8080, maybe not the correct one io.servicecomb.serviceregistry.RegistryUtils.getPublishAddress(RegistryUtils.java:506)
[2017-06-16 09:37:14,935/CST][vert.x-eventloop-thread-4][INFO]set uploads directory to null io.servicecomb.transport.rest.vertx.RestServerVerticle.init(RestServerVerticle.java:68)
[2017-06-16 09:37:14,955/CST][vert.x-eventloop-thread-4][INFO]rest listen success. address=0.0.0.0:8080 io.servicecomb.transport.rest.vertx.RestServerVerticle.lambda$startListen$0(RestServerVerticle.java:97)
[2017-06-16 09:37:14,955/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]endpoint to publish: rest://192.168.43.19:8080 io.servicecomb.core.transport.TransportManager.init(TransportManager.java:52)
[2017-06-16 09:37:14,956/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]on schema loaded, new schema. springmvc:springmvcHello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-16 09:37:14,964/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]It is running in the normal mode, a separated service registry is required io.servicecomb.serviceregistry.client.RegistryClientFactory.getRegistryClient(RegistryClientFactory.java:60)
[2017-06-16 09:37:15,095/CST][vert.x-eventloop-thread-0][WARN]service does not exist io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:106)
[2017-06-16 09:37:15,186/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]Registry Microservice successfully. id=6 appId=springmvctest, name=springmvc, version=0.0.1 io.servicecomb.serviceregistry.RegistryUtils.regsiterMicroservice(RegistryUtils.java:326)
[2017-06-16 09:37:15,189/CST][vert.x-eventloop-thread-0][WARN]Schema does not exist io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:106)
[2017-06-16 09:37:15,189/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]schemaId springmvcHello exists false io.servicecomb.serviceregistry.RegistryUtils.registerSchemas(RegistryUtils.java:293)
[2017-06-16 09:37:15,194/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]register schema 6/springmvcHello, result true io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.registerSchema(ServiceRegistryClientImpl.java:207)
[2017-06-16 09:37:15,271/CST][io.servicecomb.samples.springmvc.server.SpringmvcServer.main()][INFO]Register microservice instance success. microserviceId=6 instanceId=9 endpoints=[highway://192.168.43.19:7070?login=true, rest://192.168.43.19:8080] lease 120s io.servicecomb.serviceregistry.RegistryUtils.regsiterInstance(RegistryUtils.java:245)
[2017-06-16 09:37:15,302/CST][vert.x-eventloop-thread-2][INFO]watching microservice 6 successfully, the chosen service center address is 127.0.0.1:9980 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$watch$4(ServiceRegistryClientImpl.java:470)
[2017-06-16 09:37:37,120/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]Write merged log4j config file to /Users/zhenghaibo/git/samples/springmvc-sample/target/classes/config/merged.log4j.properties io.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:98)
[2017-06-16 09:37:37,189/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@33cd7cd7: startup date [Fri Jun 16 09:37:37 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2017-06-16 09:37:37,228/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/java-chassis-core/0.1.0-m1/java-chassis-core-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 09:37:37,525/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-config/0.1.0-m1/foundation-config-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 09:37:37,546/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-vertx/0.1.0-m1/foundation-vertx-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 09:37:37,563/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-common/0.1.0-m1/foundation-common-0.1.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 09:37:37,576/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/transport-rest-client/0.1.0-m1/transport-rest-client-0.1.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 09:37:37,738/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2017-06-16 09:37:37,738/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2017-06-16 09:37:37,801/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]config center URL is missing, skip to load configuration from config center io.servicecomb.config.ConfigurationSpringInitializer.<init>(ConfigurationSpringInitializer.java:80)
[2017-06-16 09:37:38,135/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2017-06-16 09:37:38,226/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-16 09:37:38,227/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.core.DefaultSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-16 09:37:38,758/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]generate swagger for springmvctest/springmvcClient/springmvcHello, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.samples.springmvc.server.SpringmvcHelloImpl"
  x-java-interface: "cse.gen.springmvctest.springmvcClient.springmvcHello.SpringmvcHelloImplIntf"
basePath: "/springmvchello"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /sayhello:
    post:
      operationId: "sayHello"
      parameters:
      - in: "body"
        name: "person"
        required: false
        schema:
          $ref: "#/definitions/Person"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
  /sayhi:
    post:
      operationId: "sayHi"
      parameters:
      - name: "name"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
definitions:
  Person:
    type: "object"
    properties:
      name:
        type: "string"
    x-java-class: "io.servicecomb.samples.springmvc.models.Person"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:130)
[2017-06-16 09:37:38,759/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]register schema springmvctest/springmvcClient/springmvcHello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:86)
[2017-06-16 09:37:38,767/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]Found schema ids local, springmvctest:springmvc:[] io.servicecomb.core.definition.schema.ConsumerSchemaFactory.findLocalSchemas(ConsumerSchemaFactory.java:123)
[2017-06-16 09:37:38,769/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]It is running in the normal mode, a separated service registry is required io.servicecomb.serviceregistry.client.RegistryClientFactory.getRegistryClient(RegistryClientFactory.java:60)
[2017-06-16 09:37:38,872/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]add hostName:zhenghaibodembp,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:87)
[2017-06-16 09:37:38,874/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]add hostName:zhenghaibodeMBP,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:50)
[2017-06-16 09:37:39,276/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]Found schema ids from service center, springmvctest:springmvc:0.0.1:[springmvcHello] io.servicecomb.core.definition.schema.ConsumerSchemaFactory.findMicroservice(ConsumerSchemaFactory.java:148)
[2017-06-16 09:37:39,281/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]load schema from service center, microservice=springmvctest:springmvc:0.0.1, schemaId=springmvcHello, result=true io.servicecomb.core.definition.schema.ConsumerSchemaFactory.loadSwagger(ConsumerSchemaFactory.java:273)
[2017-06-16 09:37:39,320/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]register schema springmvctest/springmvc/springmvcHello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:86)
[2017-06-16 09:37:39,321/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]on schema loaded, new schema. springmvc:springmvcHello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-16 09:37:39,333/CST][vert.x-eventloop-thread-0][WARN]highway listen address is not configured, will not listen. io.servicecomb.transport.highway.HighwayServerVerticle.startListen(HighwayServerVerticle.java:59)
[2017-06-16 09:37:39,336/CST][vert.x-eventloop-thread-2][WARN]grpc listen address is not configured, will not listen. io.servicecomb.transport.grpc.GrpcVerticle.startListen(GrpcVerticle.java:63)
[2017-06-16 09:37:39,339/CST][vert.x-eventloop-thread-4][INFO]set uploads directory to null io.servicecomb.transport.rest.vertx.RestServerVerticle.init(RestServerVerticle.java:68)
[2017-06-16 09:37:39,340/CST][vert.x-eventloop-thread-4][WARN]rest listen address is not configured, will not start. io.servicecomb.transport.rest.vertx.RestServerVerticle.start(RestServerVerticle.java:77)
[2017-06-16 09:37:39,340/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]on schema loaded, new schema. springmvcClient:springmvcHello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-16 09:37:39,341/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]on schema loaded, exists schema. springmvc:springmvcHello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:46)
[2017-06-16 09:37:39,346/CST][vert.x-eventloop-thread-0][WARN]service does not exist io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:106)
[2017-06-16 09:37:39,432/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]Registry Microservice successfully. id=7 appId=springmvctest, name=springmvcClient, version=0.0.1 io.servicecomb.serviceregistry.RegistryUtils.regsiterMicroservice(RegistryUtils.java:326)
[2017-06-16 09:37:39,435/CST][vert.x-eventloop-thread-0][WARN]Schema does not exist io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:106)
[2017-06-16 09:37:39,435/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]schemaId springmvcHello exists false io.servicecomb.serviceregistry.RegistryUtils.registerSchemas(RegistryUtils.java:293)
[2017-06-16 09:37:39,439/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]register schema 7/springmvcHello, result true io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.registerSchema(ServiceRegistryClientImpl.java:207)
[2017-06-16 09:37:39,501/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]Register microservice instance success. microserviceId=7 instanceId=10 endpoints=[] lease 120s io.servicecomb.serviceregistry.RegistryUtils.regsiterInstance(RegistryUtils.java:245)
[2017-06-16 09:37:39,535/CST][vert.x-eventloop-thread-2][INFO]watching microservice 7 successfully, the chosen service center address is 127.0.0.1:9980 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$watch$4(ServiceRegistryClientImpl.java:470)
[2017-06-16 09:37:39,639/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]Using loadbalance rule [com.netflix.loadbalancer.RoundRobinRule] for service [springmvc,]. io.servicecomb.loadbalance.LoadbalanceHandler.createLoadBalancer(LoadbalanceHandler.java:290)
[2017-06-16 09:37:39,808/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]find instances[1] from service center success. service=springmvctest/springmvc io.servicecomb.serviceregistry.RegistryUtils.findServiceInstance(RegistryUtils.java:387)
[2017-06-16 09:37:39,910/CST][io.servicecomb.samples.springmvc.client.SpringmvcClient.main()][INFO]connecting to address /192.168.43.19:7070 io.servicecomb.foundation.vertx.client.tcp.TcpClient.connect(TcpClient.java:107)
[2017-06-16 09:37:39,918/CST][vert.x-eventloop-thread-9][INFO]connect to address /192.168.43.19:7070 success io.servicecomb.foundation.vertx.client.tcp.TcpClient.onConnectSuccess(TcpClient.java:120)
[2017-06-16 09:37:39,921/CST][vert.x-eventloop-thread-9][INFO]try login to address /192.168.43.19:7070 io.servicecomb.foundation.vertx.client.tcp.TcpClient.tryLogin(TcpClient.java:171)
[2017-06-16 09:37:39,923/CST][vert.x-eventloop-thread-0][INFO]connect from 192.168.43.19:58630, in thread vert.x-eventloop-thread-0 io.servicecomb.foundation.vertx.server.TcpServerConnection.init(TcpServerConnection.java:36)
[2017-06-16 09:37:39,986/CST][vert.x-eventloop-thread-9][INFO]login success, address /192.168.43.19:7070 io.servicecomb.foundation.vertx.client.tcp.TcpClient.onLoginResponse(TcpClient.java:195)
[2017-06-16 09:37:39,987/CST][vert.x-eventloop-thread-9][INFO]writting cached buffer to address /192.168.43.19:7070 io.servicecomb.foundation.vertx.client.tcp.TcpClient.onLoginSuccess(TcpClient.java:201)
[2017-06-16 09:37:56,275/CST][Thread-2][WARN]handler chain is shutting down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:82)
[2017-06-16 09:37:56,275/CST][Thread-6][INFO]Closing org.springframework.context.support.ClassPathXmlApplicationContext@33cd7cd7: startup date [Fri Jun 16 09:37:37 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987)
[2017-06-16 09:37:56,276/CST][Thread-2][WARN]handler chain is shut down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:93)
[2017-06-16 09:37:56,276/CST][Thread-6][WARN]cse is closing now... io.servicecomb.core.CseApplicationListener.onApplicationEvent(CseApplicationListener.java:115)
[2017-06-16 09:37:56,281/CST][Thread-6][INFO]Unregister microservice instance success. microserviceId=7 instanceId=10 io.servicecomb.serviceregistry.RegistryUtils.unregsiterInstance(RegistryUtils.java:269)
[2017-06-16 09:37:56,649/CST][vert.x-eventloop-thread-0][ERROR]disconected from 192.168.43.19:58630, in thread vert.x-eventloop-thread-0 io.servicecomb.foundation.vertx.server.TcpServerConnection.lambda$init$1(TcpServerConnection.java:46)
[2017-06-16 09:37:58,803/CST][Thread-2][WARN]handler chain is shutting down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:82)
[2017-06-16 09:37:58,803/CST][Thread-6][INFO]Closing org.springframework.context.support.ClassPathXmlApplicationContext@17d2bba9: startup date [Fri Jun 16 09:37:13 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987)
[2017-06-16 09:37:58,803/CST][Thread-2][WARN]handler chain is shut down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:93)
[2017-06-16 09:37:58,804/CST][Thread-6][WARN]cse is closing now... io.servicecomb.core.CseApplicationListener.onApplicationEvent(CseApplicationListener.java:115)
[2017-06-16 09:37:58,808/CST][Thread-6][INFO]Unregister microservice instance success. microserviceId=6 instanceId=9 io.servicecomb.serviceregistry.RegistryUtils.unregsiterInstance(RegistryUtils.java:269)
[2017-06-16 10:31:01,445/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]Write merged log4j config file to /Users/zhenghaibo/git/samples/codefirst-sample/target/classes/config/merged.log4j.properties io.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:98)
[2017-06-16 10:31:01,514/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@17d2bba9: startup date [Fri Jun 16 10:31:01 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2017-06-16 10:31:01,554/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/java-chassis-core/0.1.0-m1/java-chassis-core-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 10:31:01,840/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-config/0.1.0-m1/foundation-config-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 10:31:01,856/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-vertx/0.1.0-m1/foundation-vertx-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 10:31:01,874/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-common/0.1.0-m1/foundation-common-0.1.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 10:31:01,893/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/transport-rest-client/0.1.0-m1/transport-rest-client-0.1.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 10:31:02,068/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2017-06-16 10:31:02,068/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2017-06-16 10:31:02,133/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]config center URL is missing, skip to load configuration from config center io.servicecomb.config.ConfigurationSpringInitializer.<init>(ConfigurationSpringInitializer.java:80)
[2017-06-16 10:31:02,480/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2017-06-16 10:31:02,567/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-16 10:31:02,568/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.core.DefaultSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-16 10:31:02,991/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]generate swagger for codefirsttest/codefirst/codeFirstSpringmvcHello, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.samples.codefirst.server.CodeFirstSpringmvcHelloImpl"
  x-java-interface: "cse.gen.codefirsttest.codefirst.codeFirstSpringmvcHello.CodeFirstSpringmvcHelloImplIntf"
basePath: "/springmvchello"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /sayhello:
    post:
      operationId: "sayHello"
      parameters:
      - in: "body"
        name: "person"
        required: false
        schema:
          $ref: "#/definitions/Person"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
  /sayhi:
    post:
      operationId: "sayHi"
      parameters:
      - name: "name"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
definitions:
  Person:
    type: "object"
    properties:
      name:
        type: "string"
    x-java-class: "io.servicecomb.samples.codefirst.models.Person"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:130)
[2017-06-16 10:31:02,991/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]register schema codefirsttest/codefirst/codeFirstSpringmvcHello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:86)
[2017-06-16 10:31:03,012/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]generate swagger for codefirsttest/codefirst/codeFirstJaxrsHello, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.samples.codefirst.server.CodeFIrstJaxrsHelloImpl"
  x-java-interface: "cse.gen.codefirsttest.codefirst.codeFirstJaxrsHello.CodeFIrstJaxrsHelloImplIntf"
basePath: "/CodeFIrstJaxrsHelloImpl"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /sayHello:
    post:
      operationId: "sayHello"
      parameters:
      - in: "body"
        name: "person"
        required: false
        schema:
          $ref: "#/definitions/Person"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
  /sayHi:
    post:
      operationId: "sayHi"
      parameters:
      - in: "body"
        name: "name"
        required: false
        schema:
          $ref: "#/definitions/sayHiBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
definitions:
  sayHiBody:
    type: "object"
    properties:
      name:
        type: "string"
  Person:
    type: "object"
    properties:
      name:
        type: "string"
    x-java-class: "io.servicecomb.samples.codefirst.models.Person"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:130)
[2017-06-16 10:31:03,015/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]register schema codefirsttest/codefirst/codeFirstJaxrsHello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:86)
[2017-06-16 10:31:03,022/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]generate swagger for codefirsttest/codefirst/codeFirstHello, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.samples.codefirst.server.CodeFirstPojoHelloImpl"
  x-java-interface: "cse.gen.codefirsttest.codefirst.codeFirstHello.CodeFirstPojoHelloImplIntf"
basePath: "/CodeFirstPojoHelloImpl"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /sayHello:
    post:
      operationId: "sayHello"
      parameters:
      - in: "body"
        name: "person"
        required: false
        schema:
          $ref: "#/definitions/Person"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
  /sayHi:
    post:
      operationId: "sayHi"
      parameters:
      - in: "body"
        name: "name"
        required: false
        schema:
          $ref: "#/definitions/sayHiBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
definitions:
  sayHiBody:
    type: "object"
    properties:
      name:
        type: "string"
  Person:
    type: "object"
    properties:
      name:
        type: "string"
    x-java-class: "io.servicecomb.samples.codefirst.models.Person"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:130)
[2017-06-16 10:31:03,022/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]register schema codefirsttest/codefirst/codeFirstHello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:86)
[2017-06-16 10:31:03,078/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]add hostName:zhenghaibodembp,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:87)
[2017-06-16 10:31:03,080/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]add hostName:zhenghaibodeMBP,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:50)
[2017-06-16 10:31:03,083/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][WARN]address 0.0.0.0:7070?login=true, auto select a host address to publish 192.168.43.19:7070, maybe not the correct one io.servicecomb.serviceregistry.RegistryUtils.getPublishAddress(RegistryUtils.java:506)
[2017-06-16 10:31:03,412/CST][vert.x-eventloop-thread-0][INFO]highway listen success. address=0.0.0.0:7070 io.servicecomb.transport.highway.HighwayServerVerticle.lambda$startListen$0(HighwayServerVerticle.java:68)
[2017-06-16 10:31:03,414/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]endpoint to publish: highway://192.168.43.19:7070?login=true io.servicecomb.core.transport.TransportManager.init(TransportManager.java:52)
[2017-06-16 10:31:03,421/CST][vert.x-eventloop-thread-2][WARN]grpc listen address is not configured, will not listen. io.servicecomb.transport.grpc.GrpcVerticle.startListen(GrpcVerticle.java:63)
[2017-06-16 10:31:03,422/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][WARN]address 0.0.0.0:8080, auto select a host address to publish 192.168.43.19:8080, maybe not the correct one io.servicecomb.serviceregistry.RegistryUtils.getPublishAddress(RegistryUtils.java:506)
[2017-06-16 10:31:03,425/CST][vert.x-eventloop-thread-4][INFO]set uploads directory to null io.servicecomb.transport.rest.vertx.RestServerVerticle.init(RestServerVerticle.java:68)
[2017-06-16 10:31:03,445/CST][vert.x-eventloop-thread-4][INFO]rest listen success. address=0.0.0.0:8080 io.servicecomb.transport.rest.vertx.RestServerVerticle.lambda$startListen$0(RestServerVerticle.java:97)
[2017-06-16 10:31:03,446/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]endpoint to publish: rest://192.168.43.19:8080 io.servicecomb.core.transport.TransportManager.init(TransportManager.java:52)
[2017-06-16 10:31:03,446/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]on schema loaded, new schema. codefirst:codeFirstSpringmvcHello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-16 10:31:03,458/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]on schema loaded, new schema. codefirst:codeFirstJaxrsHello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-16 10:31:03,458/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]on schema loaded, new schema. codefirst:codeFirstHello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-16 10:31:03,460/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]It is running in the normal mode, a separated service registry is required io.servicecomb.serviceregistry.client.RegistryClientFactory.getRegistryClient(RegistryClientFactory.java:60)
[2017-06-16 10:31:03,588/CST][vert.x-eventloop-thread-0][WARN]service does not exist io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:106)
[2017-06-16 10:31:03,682/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]Registry Microservice successfully. id=8 appId=codefirsttest, name=codefirst, version=0.0.1 io.servicecomb.serviceregistry.RegistryUtils.regsiterMicroservice(RegistryUtils.java:326)
[2017-06-16 10:31:03,684/CST][vert.x-eventloop-thread-0][WARN]Schema does not exist io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:106)
[2017-06-16 10:31:03,685/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]schemaId codeFirstSpringmvcHello exists false io.servicecomb.serviceregistry.RegistryUtils.registerSchemas(RegistryUtils.java:293)
[2017-06-16 10:31:03,689/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]register schema 8/codeFirstSpringmvcHello, result true io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.registerSchema(ServiceRegistryClientImpl.java:207)
[2017-06-16 10:31:03,711/CST][vert.x-eventloop-thread-0][WARN]Schema does not exist io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:106)
[2017-06-16 10:31:03,711/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]schemaId codeFirstJaxrsHello exists false io.servicecomb.serviceregistry.RegistryUtils.registerSchemas(RegistryUtils.java:293)
[2017-06-16 10:31:03,716/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]register schema 8/codeFirstJaxrsHello, result true io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.registerSchema(ServiceRegistryClientImpl.java:207)
[2017-06-16 10:31:03,731/CST][vert.x-eventloop-thread-0][WARN]Schema does not exist io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:106)
[2017-06-16 10:31:03,732/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]schemaId codeFirstHello exists false io.servicecomb.serviceregistry.RegistryUtils.registerSchemas(RegistryUtils.java:293)
[2017-06-16 10:31:03,735/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]register schema 8/codeFirstHello, result true io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.registerSchema(ServiceRegistryClientImpl.java:207)
[2017-06-16 10:31:03,831/CST][io.servicecomb.samples.codefirst.server.CodeFirstServer.main()][INFO]Register microservice instance success. microserviceId=8 instanceId=11 endpoints=[highway://192.168.43.19:7070?login=true, rest://192.168.43.19:8080] lease 120s io.servicecomb.serviceregistry.RegistryUtils.regsiterInstance(RegistryUtils.java:245)
[2017-06-16 10:31:03,861/CST][vert.x-eventloop-thread-2][INFO]watching microservice 8 successfully, the chosen service center address is 127.0.0.1:9980 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$watch$4(ServiceRegistryClientImpl.java:470)
[2017-06-16 10:31:30,684/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]Write merged log4j config file to /Users/zhenghaibo/git/samples/codefirst-sample/target/classes/config/merged.log4j.properties io.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:98)
[2017-06-16 10:31:30,841/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@59ee4e01: startup date [Fri Jun 16 10:31:30 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2017-06-16 10:31:30,877/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/java-chassis-core/0.1.0-m1/java-chassis-core-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 10:31:31,203/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-config/0.1.0-m1/foundation-config-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 10:31:31,226/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-vertx/0.1.0-m1/foundation-vertx-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 10:31:31,244/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-common/0.1.0-m1/foundation-common-0.1.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 10:31:31,264/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/transport-rest-client/0.1.0-m1/transport-rest-client-0.1.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 10:31:31,437/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2017-06-16 10:31:31,437/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2017-06-16 10:31:31,516/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]config center URL is missing, skip to load configuration from config center io.servicecomb.config.ConfigurationSpringInitializer.<init>(ConfigurationSpringInitializer.java:80)
[2017-06-16 10:31:31,762/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2017-06-16 10:31:31,877/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-16 10:31:31,878/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.core.DefaultSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-16 10:31:32,331/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]generate swagger for codefirsttest/codefirstClient/codeFirstSpringmvcHello, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.samples.codefirst.server.CodeFirstSpringmvcHelloImpl"
  x-java-interface: "cse.gen.codefirsttest.codefirstClient.codeFirstSpringmvcHello.CodeFirstSpringmvcHelloImplIntf"
basePath: "/springmvchello"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /sayhello:
    post:
      operationId: "sayHello"
      parameters:
      - in: "body"
        name: "person"
        required: false
        schema:
          $ref: "#/definitions/Person"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
  /sayhi:
    post:
      operationId: "sayHi"
      parameters:
      - name: "name"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
definitions:
  Person:
    type: "object"
    properties:
      name:
        type: "string"
    x-java-class: "io.servicecomb.samples.codefirst.models.Person"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:130)
[2017-06-16 10:31:32,332/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]register schema codefirsttest/codefirstClient/codeFirstSpringmvcHello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:86)
[2017-06-16 10:31:32,346/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]generate swagger for codefirsttest/codefirstClient/codeFirstJaxrsHello, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.samples.codefirst.server.CodeFIrstJaxrsHelloImpl"
  x-java-interface: "cse.gen.codefirsttest.codefirstClient.codeFirstJaxrsHello.CodeFIrstJaxrsHelloImplIntf"
basePath: "/CodeFIrstJaxrsHelloImpl"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /sayHello:
    post:
      operationId: "sayHello"
      parameters:
      - in: "body"
        name: "person"
        required: false
        schema:
          $ref: "#/definitions/Person"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
  /sayHi:
    post:
      operationId: "sayHi"
      parameters:
      - in: "body"
        name: "name"
        required: false
        schema:
          $ref: "#/definitions/sayHiBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
definitions:
  sayHiBody:
    type: "object"
    properties:
      name:
        type: "string"
  Person:
    type: "object"
    properties:
      name:
        type: "string"
    x-java-class: "io.servicecomb.samples.codefirst.models.Person"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:130)
[2017-06-16 10:31:32,347/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]register schema codefirsttest/codefirstClient/codeFirstJaxrsHello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:86)
[2017-06-16 10:31:32,353/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]generate swagger for codefirsttest/codefirstClient/codeFirstHello, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.samples.codefirst.server.CodeFirstPojoHelloImpl"
  x-java-interface: "cse.gen.codefirsttest.codefirstClient.codeFirstHello.CodeFirstPojoHelloImplIntf"
basePath: "/CodeFirstPojoHelloImpl"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /sayHello:
    post:
      operationId: "sayHello"
      parameters:
      - in: "body"
        name: "person"
        required: false
        schema:
          $ref: "#/definitions/Person"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
  /sayHi:
    post:
      operationId: "sayHi"
      parameters:
      - in: "body"
        name: "name"
        required: false
        schema:
          $ref: "#/definitions/sayHiBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
definitions:
  sayHiBody:
    type: "object"
    properties:
      name:
        type: "string"
  Person:
    type: "object"
    properties:
      name:
        type: "string"
    x-java-class: "io.servicecomb.samples.codefirst.models.Person"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:130)
[2017-06-16 10:31:32,354/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]register schema codefirsttest/codefirstClient/codeFirstHello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:86)
[2017-06-16 10:31:32,362/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]Found schema ids local, codefirsttest:codefirst:[] io.servicecomb.core.definition.schema.ConsumerSchemaFactory.findLocalSchemas(ConsumerSchemaFactory.java:123)
[2017-06-16 10:31:32,363/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]It is running in the normal mode, a separated service registry is required io.servicecomb.serviceregistry.client.RegistryClientFactory.getRegistryClient(RegistryClientFactory.java:60)
[2017-06-16 10:31:32,401/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]add hostName:zhenghaibodembp,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:87)
[2017-06-16 10:31:32,402/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]add hostName:zhenghaibodeMBP,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:50)
[2017-06-16 10:31:32,800/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]Found schema ids from service center, codefirsttest:codefirst:0.0.1:[codeFirstSpringmvcHello, codeFirstJaxrsHello, codeFirstHello] io.servicecomb.core.definition.schema.ConsumerSchemaFactory.findMicroservice(ConsumerSchemaFactory.java:148)
[2017-06-16 10:31:32,804/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]load schema from service center, microservice=codefirsttest:codefirst:0.0.1, schemaId=codeFirstSpringmvcHello, result=true io.servicecomb.core.definition.schema.ConsumerSchemaFactory.loadSwagger(ConsumerSchemaFactory.java:273)
[2017-06-16 10:31:32,842/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]register schema codefirsttest/codefirst/codeFirstSpringmvcHello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:86)
[2017-06-16 10:31:32,846/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]load schema from service center, microservice=codefirsttest:codefirst:0.0.1, schemaId=codeFirstJaxrsHello, result=true io.servicecomb.core.definition.schema.ConsumerSchemaFactory.loadSwagger(ConsumerSchemaFactory.java:273)
[2017-06-16 10:31:32,849/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]register schema codefirsttest/codefirst/codeFirstJaxrsHello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:86)
[2017-06-16 10:31:32,854/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]load schema from service center, microservice=codefirsttest:codefirst:0.0.1, schemaId=codeFirstHello, result=true io.servicecomb.core.definition.schema.ConsumerSchemaFactory.loadSwagger(ConsumerSchemaFactory.java:273)
[2017-06-16 10:31:32,857/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]register schema codefirsttest/codefirst/codeFirstHello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:86)
[2017-06-16 10:31:32,859/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]on schema loaded, new schema. codefirst:codeFirstSpringmvcHello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-16 10:31:32,867/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]on schema loaded, new schema. codefirst:codeFirstJaxrsHello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-16 10:31:32,867/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]on schema loaded, new schema. codefirst:codeFirstHello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-16 10:31:32,873/CST][vert.x-eventloop-thread-0][WARN]highway listen address is not configured, will not listen. io.servicecomb.transport.highway.HighwayServerVerticle.startListen(HighwayServerVerticle.java:59)
[2017-06-16 10:31:32,876/CST][vert.x-eventloop-thread-2][WARN]grpc listen address is not configured, will not listen. io.servicecomb.transport.grpc.GrpcVerticle.startListen(GrpcVerticle.java:63)
[2017-06-16 10:31:32,880/CST][vert.x-eventloop-thread-4][INFO]set uploads directory to null io.servicecomb.transport.rest.vertx.RestServerVerticle.init(RestServerVerticle.java:68)
[2017-06-16 10:31:32,880/CST][vert.x-eventloop-thread-4][WARN]rest listen address is not configured, will not start. io.servicecomb.transport.rest.vertx.RestServerVerticle.start(RestServerVerticle.java:77)
[2017-06-16 10:31:32,880/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]on schema loaded, exists schema. codefirst:codeFirstSpringmvcHello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:46)
[2017-06-16 10:31:32,880/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]on schema loaded, exists schema. codefirst:codeFirstJaxrsHello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:46)
[2017-06-16 10:31:32,881/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]on schema loaded, exists schema. codefirst:codeFirstHello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:46)
[2017-06-16 10:31:32,881/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]on schema loaded, new schema. codefirstClient:codeFirstSpringmvcHello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-16 10:31:32,881/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]on schema loaded, new schema. codefirstClient:codeFirstJaxrsHello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-16 10:31:32,881/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]on schema loaded, new schema. codefirstClient:codeFirstHello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-16 10:31:32,885/CST][vert.x-eventloop-thread-0][WARN]service does not exist io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:106)
[2017-06-16 10:31:32,973/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]Registry Microservice successfully. id=9 appId=codefirsttest, name=codefirstClient, version=0.0.1 io.servicecomb.serviceregistry.RegistryUtils.regsiterMicroservice(RegistryUtils.java:326)
[2017-06-16 10:31:32,976/CST][vert.x-eventloop-thread-0][WARN]Schema does not exist io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:106)
[2017-06-16 10:31:32,976/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]schemaId codeFirstSpringmvcHello exists false io.servicecomb.serviceregistry.RegistryUtils.registerSchemas(RegistryUtils.java:293)
[2017-06-16 10:31:32,980/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]register schema 9/codeFirstSpringmvcHello, result true io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.registerSchema(ServiceRegistryClientImpl.java:207)
[2017-06-16 10:31:32,990/CST][vert.x-eventloop-thread-0][WARN]Schema does not exist io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:106)
[2017-06-16 10:31:32,990/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]schemaId codeFirstJaxrsHello exists false io.servicecomb.serviceregistry.RegistryUtils.registerSchemas(RegistryUtils.java:293)
[2017-06-16 10:31:32,993/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]register schema 9/codeFirstJaxrsHello, result true io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.registerSchema(ServiceRegistryClientImpl.java:207)
[2017-06-16 10:31:33,017/CST][vert.x-eventloop-thread-0][WARN]Schema does not exist io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:106)
[2017-06-16 10:31:33,018/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]schemaId codeFirstHello exists false io.servicecomb.serviceregistry.RegistryUtils.registerSchemas(RegistryUtils.java:293)
[2017-06-16 10:31:33,023/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]register schema 9/codeFirstHello, result true io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.registerSchema(ServiceRegistryClientImpl.java:207)
[2017-06-16 10:31:33,112/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]Register microservice instance success. microserviceId=9 instanceId=12 endpoints=[] lease 120s io.servicecomb.serviceregistry.RegistryUtils.regsiterInstance(RegistryUtils.java:245)
[2017-06-16 10:31:33,147/CST][vert.x-eventloop-thread-2][INFO]watching microservice 9 successfully, the chosen service center address is 127.0.0.1:9980 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$watch$4(ServiceRegistryClientImpl.java:470)
[2017-06-16 10:31:33,266/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]Using loadbalance rule [com.netflix.loadbalancer.RoundRobinRule] for service [codefirst,]. io.servicecomb.loadbalance.LoadbalanceHandler.createLoadBalancer(LoadbalanceHandler.java:290)
[2017-06-16 10:31:33,414/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]find instances[1] from service center success. service=codefirsttest/codefirst io.servicecomb.serviceregistry.RegistryUtils.findServiceInstance(RegistryUtils.java:387)
[2017-06-16 10:31:33,510/CST][io.servicecomb.samples.codefirst.client.CodeFirstClient.main()][INFO]connecting to address /192.168.43.19:7070 io.servicecomb.foundation.vertx.client.tcp.TcpClient.connect(TcpClient.java:107)
[2017-06-16 10:31:33,519/CST][vert.x-eventloop-thread-9][INFO]connect to address /192.168.43.19:7070 success io.servicecomb.foundation.vertx.client.tcp.TcpClient.onConnectSuccess(TcpClient.java:120)
[2017-06-16 10:31:33,523/CST][vert.x-eventloop-thread-9][INFO]try login to address /192.168.43.19:7070 io.servicecomb.foundation.vertx.client.tcp.TcpClient.tryLogin(TcpClient.java:171)
[2017-06-16 10:31:33,524/CST][vert.x-eventloop-thread-0][INFO]connect from 192.168.43.19:59159, in thread vert.x-eventloop-thread-0 io.servicecomb.foundation.vertx.server.TcpServerConnection.init(TcpServerConnection.java:36)
[2017-06-16 10:31:33,601/CST][vert.x-eventloop-thread-9][INFO]login success, address /192.168.43.19:7070 io.servicecomb.foundation.vertx.client.tcp.TcpClient.onLoginResponse(TcpClient.java:195)
[2017-06-16 10:31:33,601/CST][vert.x-eventloop-thread-9][INFO]writting cached buffer to address /192.168.43.19:7070 io.servicecomb.foundation.vertx.client.tcp.TcpClient.onLoginSuccess(TcpClient.java:201)
[2017-06-16 10:31:44,417/CST][Thread-2][WARN]handler chain is shutting down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:82)
[2017-06-16 10:31:44,417/CST][Thread-6][INFO]Closing org.springframework.context.support.ClassPathXmlApplicationContext@59ee4e01: startup date [Fri Jun 16 10:31:30 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987)
[2017-06-16 10:31:44,417/CST][Thread-2][WARN]handler chain is shut down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:93)
[2017-06-16 10:31:44,418/CST][Thread-6][WARN]cse is closing now... io.servicecomb.core.CseApplicationListener.onApplicationEvent(CseApplicationListener.java:115)
[2017-06-16 10:31:44,422/CST][Thread-6][INFO]Unregister microservice instance success. microserviceId=9 instanceId=12 io.servicecomb.serviceregistry.RegistryUtils.unregsiterInstance(RegistryUtils.java:269)
[2017-06-16 10:31:44,793/CST][vert.x-eventloop-thread-0][ERROR]disconected from 192.168.43.19:59159, in thread vert.x-eventloop-thread-0 io.servicecomb.foundation.vertx.server.TcpServerConnection.lambda$init$1(TcpServerConnection.java:46)
[2017-06-16 10:31:47,392/CST][Thread-2][WARN]handler chain is shutting down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:82)
[2017-06-16 10:31:47,393/CST][Thread-6][INFO]Closing org.springframework.context.support.ClassPathXmlApplicationContext@17d2bba9: startup date [Fri Jun 16 10:31:01 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987)
[2017-06-16 10:31:47,393/CST][Thread-2][WARN]handler chain is shut down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:93)
[2017-06-16 10:31:47,393/CST][Thread-6][WARN]cse is closing now... io.servicecomb.core.CseApplicationListener.onApplicationEvent(CseApplicationListener.java:115)
[2017-06-16 10:31:47,398/CST][Thread-6][INFO]Unregister microservice instance success. microserviceId=8 instanceId=11 io.servicecomb.serviceregistry.RegistryUtils.unregsiterInstance(RegistryUtils.java:269)
[2017-06-16 10:51:57,667/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]Write merged log4j config file to /Users/zhenghaibo/git/samples/custom-handler-sample/target/classes/config/merged.log4j.properties io.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:98)
[2017-06-16 10:51:57,737/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@155c380b: startup date [Fri Jun 16 10:51:57 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2017-06-16 10:51:57,778/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/java-chassis-core/0.1.0-m1/java-chassis-core-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 10:51:58,086/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-config/0.1.0-m1/foundation-config-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 10:51:58,106/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-vertx/0.1.0-m1/foundation-vertx-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 10:51:58,122/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-common/0.1.0-m1/foundation-common-0.1.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 10:51:58,137/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/transport-rest-client/0.1.0-m1/transport-rest-client-0.1.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 10:51:58,301/CST][io.servicecomb.samples.chs.server.CHSServer.main()][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2017-06-16 10:51:58,302/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2017-06-16 10:51:58,367/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]config center URL is missing, skip to load configuration from config center io.servicecomb.config.ConfigurationSpringInitializer.<init>(ConfigurationSpringInitializer.java:80)
[2017-06-16 10:51:58,696/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2017-06-16 10:51:58,789/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-16 10:51:58,789/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.core.DefaultSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-16 10:51:59,275/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]generate swagger for chstest/chs/hello, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.samples.chs.server.HelloImpl"
  x-java-interface: "cse.gen.chstest.chs.hello.HelloImplIntf"
basePath: "/HelloImpl"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /sayHello:
    post:
      operationId: "sayHello"
      parameters:
      - in: "body"
        name: "person"
        required: false
        schema:
          $ref: "#/definitions/Person"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
  /sayHi:
    post:
      operationId: "sayHi"
      parameters:
      - in: "body"
        name: "name"
        required: false
        schema:
          $ref: "#/definitions/sayHiBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
definitions:
  Person:
    type: "object"
    properties:
      name:
        type: "string"
    x-java-class: "io.servicecomb.samples.chs.models.Person"
  sayHiBody:
    type: "object"
    properties:
      name:
        type: "string"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:130)
[2017-06-16 10:51:59,275/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]register schema chstest/chs/hello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:86)
[2017-06-16 10:51:59,300/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]add hostName:zhenghaibodembp,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:87)
[2017-06-16 10:51:59,302/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]add hostName:zhenghaibodeMBP,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:50)
[2017-06-16 10:51:59,303/CST][io.servicecomb.samples.chs.server.CHSServer.main()][WARN]address 0.0.0.0:7070?login=true, auto select a host address to publish 192.168.43.19:7070, maybe not the correct one io.servicecomb.serviceregistry.RegistryUtils.getPublishAddress(RegistryUtils.java:506)
[2017-06-16 10:51:59,631/CST][vert.x-eventloop-thread-0][INFO]highway listen success. address=0.0.0.0:7070 io.servicecomb.transport.highway.HighwayServerVerticle.lambda$startListen$0(HighwayServerVerticle.java:68)
[2017-06-16 10:51:59,634/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]endpoint to publish: highway://192.168.43.19:7070?login=true io.servicecomb.core.transport.TransportManager.init(TransportManager.java:52)
[2017-06-16 10:51:59,640/CST][vert.x-eventloop-thread-2][WARN]grpc listen address is not configured, will not listen. io.servicecomb.transport.grpc.GrpcVerticle.startListen(GrpcVerticle.java:63)
[2017-06-16 10:51:59,641/CST][io.servicecomb.samples.chs.server.CHSServer.main()][WARN]address 0.0.0.0:8080, auto select a host address to publish 192.168.43.19:8080, maybe not the correct one io.servicecomb.serviceregistry.RegistryUtils.getPublishAddress(RegistryUtils.java:506)
[2017-06-16 10:51:59,644/CST][vert.x-eventloop-thread-4][INFO]set uploads directory to null io.servicecomb.transport.rest.vertx.RestServerVerticle.init(RestServerVerticle.java:68)
[2017-06-16 10:51:59,666/CST][vert.x-eventloop-thread-4][INFO]rest listen success. address=0.0.0.0:8080 io.servicecomb.transport.rest.vertx.RestServerVerticle.lambda$startListen$0(RestServerVerticle.java:97)
[2017-06-16 10:51:59,667/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]endpoint to publish: rest://192.168.43.19:8080 io.servicecomb.core.transport.TransportManager.init(TransportManager.java:52)
[2017-06-16 10:51:59,668/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]on schema loaded, new schema. chs:hello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-16 10:51:59,676/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]It is running in the normal mode, a separated service registry is required io.servicecomb.serviceregistry.client.RegistryClientFactory.getRegistryClient(RegistryClientFactory.java:60)
[2017-06-16 10:51:59,798/CST][vert.x-eventloop-thread-0][WARN]service does not exist io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:106)
[2017-06-16 10:51:59,907/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]Registry Microservice successfully. id=10 appId=chstest, name=chs, version=0.0.1 io.servicecomb.serviceregistry.RegistryUtils.regsiterMicroservice(RegistryUtils.java:326)
[2017-06-16 10:51:59,910/CST][vert.x-eventloop-thread-0][WARN]Schema does not exist io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:106)
[2017-06-16 10:51:59,910/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]schemaId hello exists false io.servicecomb.serviceregistry.RegistryUtils.registerSchemas(RegistryUtils.java:293)
[2017-06-16 10:51:59,914/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]register schema 10/hello, result true io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.registerSchema(ServiceRegistryClientImpl.java:207)
[2017-06-16 10:51:59,963/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]Register microservice instance success. microserviceId=10 instanceId=13 endpoints=[highway://192.168.43.19:7070?login=true, rest://192.168.43.19:8080] lease 120s io.servicecomb.serviceregistry.RegistryUtils.regsiterInstance(RegistryUtils.java:245)
[2017-06-16 10:51:59,992/CST][vert.x-eventloop-thread-2][INFO]watching microservice 10 successfully, the chosen service center address is 127.0.0.1:9980 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$watch$4(ServiceRegistryClientImpl.java:470)
[2017-06-16 10:52:17,448/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]Write merged log4j config file to /Users/zhenghaibo/git/samples/custom-handler-sample/target/classes/config/merged.log4j.properties io.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:98)
[2017-06-16 10:52:17,600/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@64a1456f: startup date [Fri Jun 16 10:52:17 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2017-06-16 10:52:17,640/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/java-chassis-core/0.1.0-m1/java-chassis-core-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 10:52:17,980/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-config/0.1.0-m1/foundation-config-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 10:52:17,999/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-vertx/0.1.0-m1/foundation-vertx-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 10:52:18,016/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-common/0.1.0-m1/foundation-common-0.1.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 10:52:18,033/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/transport-rest-client/0.1.0-m1/transport-rest-client-0.1.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 10:52:18,204/CST][io.servicecomb.samples.chs.client.CHSClient.main()][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2017-06-16 10:52:18,205/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2017-06-16 10:52:18,280/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]config center URL is missing, skip to load configuration from config center io.servicecomb.config.ConfigurationSpringInitializer.<init>(ConfigurationSpringInitializer.java:80)
[2017-06-16 10:52:18,530/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2017-06-16 10:52:18,627/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-16 10:52:18,628/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.core.DefaultSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-16 10:52:19,143/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]generate swagger for chstest/chsClient/hello, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.samples.chs.server.HelloImpl"
  x-java-interface: "cse.gen.chstest.chsClient.hello.HelloImplIntf"
basePath: "/HelloImpl"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /sayHello:
    post:
      operationId: "sayHello"
      parameters:
      - in: "body"
        name: "person"
        required: false
        schema:
          $ref: "#/definitions/Person"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
  /sayHi:
    post:
      operationId: "sayHi"
      parameters:
      - in: "body"
        name: "name"
        required: false
        schema:
          $ref: "#/definitions/sayHiBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
definitions:
  sayHiBody:
    type: "object"
    properties:
      name:
        type: "string"
  Person:
    type: "object"
    properties:
      name:
        type: "string"
    x-java-class: "io.servicecomb.samples.chs.models.Person"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:130)
[2017-06-16 10:52:19,143/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]register schema chstest/chsClient/hello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:86)
[2017-06-16 10:52:19,154/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]Found schema ids local, chstest:chs:[] io.servicecomb.core.definition.schema.ConsumerSchemaFactory.findLocalSchemas(ConsumerSchemaFactory.java:123)
[2017-06-16 10:52:19,155/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]It is running in the normal mode, a separated service registry is required io.servicecomb.serviceregistry.client.RegistryClientFactory.getRegistryClient(RegistryClientFactory.java:60)
[2017-06-16 10:52:19,169/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]add hostName:zhenghaibodembp,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:87)
[2017-06-16 10:52:19,170/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]add hostName:zhenghaibodeMBP,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:50)
[2017-06-16 10:52:19,557/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]Found schema ids from service center, chstest:chs:0.0.1:[hello] io.servicecomb.core.definition.schema.ConsumerSchemaFactory.findMicroservice(ConsumerSchemaFactory.java:148)
[2017-06-16 10:52:19,562/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]load schema from service center, microservice=chstest:chs:0.0.1, schemaId=hello, result=true io.servicecomb.core.definition.schema.ConsumerSchemaFactory.loadSwagger(ConsumerSchemaFactory.java:273)
[2017-06-16 10:52:19,600/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]register schema chstest/chs/hello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:86)
[2017-06-16 10:52:19,602/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]on schema loaded, new schema. chs:hello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-16 10:52:19,613/CST][vert.x-eventloop-thread-0][WARN]highway listen address is not configured, will not listen. io.servicecomb.transport.highway.HighwayServerVerticle.startListen(HighwayServerVerticle.java:59)
[2017-06-16 10:52:19,615/CST][vert.x-eventloop-thread-2][WARN]grpc listen address is not configured, will not listen. io.servicecomb.transport.grpc.GrpcVerticle.startListen(GrpcVerticle.java:63)
[2017-06-16 10:52:19,618/CST][vert.x-eventloop-thread-4][INFO]set uploads directory to null io.servicecomb.transport.rest.vertx.RestServerVerticle.init(RestServerVerticle.java:68)
[2017-06-16 10:52:19,618/CST][vert.x-eventloop-thread-4][WARN]rest listen address is not configured, will not start. io.servicecomb.transport.rest.vertx.RestServerVerticle.start(RestServerVerticle.java:77)
[2017-06-16 10:52:19,618/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]on schema loaded, new schema. chsClient:hello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-16 10:52:19,619/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]on schema loaded, exists schema. chs:hello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:46)
[2017-06-16 10:52:19,624/CST][vert.x-eventloop-thread-0][WARN]service does not exist io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:106)
[2017-06-16 10:52:19,700/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]Registry Microservice successfully. id=11 appId=chstest, name=chsClient, version=0.0.1 io.servicecomb.serviceregistry.RegistryUtils.regsiterMicroservice(RegistryUtils.java:326)
[2017-06-16 10:52:19,703/CST][vert.x-eventloop-thread-0][WARN]Schema does not exist io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:106)
[2017-06-16 10:52:19,703/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]schemaId hello exists false io.servicecomb.serviceregistry.RegistryUtils.registerSchemas(RegistryUtils.java:293)
[2017-06-16 10:52:19,706/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]register schema 11/hello, result true io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.registerSchema(ServiceRegistryClientImpl.java:207)
[2017-06-16 10:52:19,764/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]Register microservice instance success. microserviceId=11 instanceId=14 endpoints=[] lease 120s io.servicecomb.serviceregistry.RegistryUtils.regsiterInstance(RegistryUtils.java:245)
[2017-06-16 10:52:19,797/CST][vert.x-eventloop-thread-2][INFO]watching microservice 11 successfully, the chosen service center address is 127.0.0.1:9980 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$watch$4(ServiceRegistryClientImpl.java:470)
[2017-06-16 10:52:19,919/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]Using loadbalance rule [com.netflix.loadbalancer.RoundRobinRule] for service [chs,]. io.servicecomb.loadbalance.LoadbalanceHandler.createLoadBalancer(LoadbalanceHandler.java:290)
[2017-06-16 10:52:20,097/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]find instances[1] from service center success. service=chstest/chs io.servicecomb.serviceregistry.RegistryUtils.findServiceInstance(RegistryUtils.java:387)
[2017-06-16 10:52:20,109/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]It's my handler io.servicecomb.samples.chs.handlers.MyHandler.handle(MyHandler.java:31)
[2017-06-16 10:52:20,203/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]connecting to address /192.168.43.19:7070 io.servicecomb.foundation.vertx.client.tcp.TcpClient.connect(TcpClient.java:107)
[2017-06-16 10:52:20,211/CST][vert.x-eventloop-thread-9][INFO]connect to address /192.168.43.19:7070 success io.servicecomb.foundation.vertx.client.tcp.TcpClient.onConnectSuccess(TcpClient.java:120)
[2017-06-16 10:52:20,215/CST][vert.x-eventloop-thread-9][INFO]try login to address /192.168.43.19:7070 io.servicecomb.foundation.vertx.client.tcp.TcpClient.tryLogin(TcpClient.java:171)
[2017-06-16 10:52:20,217/CST][vert.x-eventloop-thread-0][INFO]connect from 192.168.43.19:59397, in thread vert.x-eventloop-thread-0 io.servicecomb.foundation.vertx.server.TcpServerConnection.init(TcpServerConnection.java:36)
[2017-06-16 10:52:20,298/CST][vert.x-eventloop-thread-9][INFO]login success, address /192.168.43.19:7070 io.servicecomb.foundation.vertx.client.tcp.TcpClient.onLoginResponse(TcpClient.java:195)
[2017-06-16 10:52:20,298/CST][vert.x-eventloop-thread-9][INFO]writting cached buffer to address /192.168.43.19:7070 io.servicecomb.foundation.vertx.client.tcp.TcpClient.onLoginSuccess(TcpClient.java:201)
[2017-06-16 10:52:20,338/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]It's my handler io.servicecomb.samples.chs.handlers.MyHandler.handle(MyHandler.java:31)
[2017-06-16 10:52:52,253/CST][Thread-6][INFO]Closing org.springframework.context.support.ClassPathXmlApplicationContext@155c380b: startup date [Fri Jun 16 10:51:57 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987)
[2017-06-16 10:52:52,253/CST][Thread-2][WARN]handler chain is shutting down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:82)
[2017-06-16 10:52:52,253/CST][Thread-2][WARN]handler chain is shut down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:93)
[2017-06-16 10:52:52,253/CST][Thread-6][WARN]cse is closing now... io.servicecomb.core.CseApplicationListener.onApplicationEvent(CseApplicationListener.java:115)
[2017-06-16 10:52:52,257/CST][Thread-6][INFO]Unregister microservice instance success. microserviceId=10 instanceId=13 io.servicecomb.serviceregistry.RegistryUtils.unregsiterInstance(RegistryUtils.java:269)
[2017-06-16 10:52:52,616/CST][vert.x-eventloop-thread-9][ERROR]0.0.0.0:59397 disconnected from /192.168.43.19:7070, in thread vert.x-eventloop-thread-9, cause socket closed io.servicecomb.foundation.vertx.client.tcp.TcpClient.onDisconnected(TcpClient.java:147)
[2017-06-16 10:52:57,094/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]Write merged log4j config file to /Users/zhenghaibo/git/samples/custom-handler-sample/target/classes/config/merged.log4j.properties io.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:98)
[2017-06-16 10:52:57,155/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@519b49f9: startup date [Fri Jun 16 10:52:57 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2017-06-16 10:52:57,190/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/java-chassis-core/0.1.0-m1/java-chassis-core-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 10:52:57,477/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-config/0.1.0-m1/foundation-config-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 10:52:57,494/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-vertx/0.1.0-m1/foundation-vertx-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 10:52:57,509/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-common/0.1.0-m1/foundation-common-0.1.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 10:52:57,521/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/transport-rest-client/0.1.0-m1/transport-rest-client-0.1.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 10:52:57,678/CST][io.servicecomb.samples.chs.server.CHSServer.main()][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2017-06-16 10:52:57,678/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2017-06-16 10:52:57,735/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]config center URL is missing, skip to load configuration from config center io.servicecomb.config.ConfigurationSpringInitializer.<init>(ConfigurationSpringInitializer.java:80)
[2017-06-16 10:52:57,933/CST][Thread-2][WARN]handler chain is shutting down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:82)
[2017-06-16 10:52:57,933/CST][Thread-2][WARN]handler chain is shut down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:93)
[2017-06-16 10:52:57,933/CST][Thread-6][INFO]Closing org.springframework.context.support.ClassPathXmlApplicationContext@64a1456f: startup date [Fri Jun 16 10:52:17 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987)
[2017-06-16 10:52:57,934/CST][Thread-6][WARN]cse is closing now... io.servicecomb.core.CseApplicationListener.onApplicationEvent(CseApplicationListener.java:115)
[2017-06-16 10:52:57,940/CST][Thread-6][INFO]Unregister microservice instance success. microserviceId=11 instanceId=14 io.servicecomb.serviceregistry.RegistryUtils.unregsiterInstance(RegistryUtils.java:269)
[2017-06-16 10:52:58,096/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2017-06-16 10:52:58,199/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-16 10:52:58,199/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.core.DefaultSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-16 10:52:58,683/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]generate swagger for chstest/chs/hello, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.samples.chs.server.HelloImpl"
  x-java-interface: "cse.gen.chstest.chs.hello.HelloImplIntf"
basePath: "/HelloImpl"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /sayHello:
    post:
      operationId: "sayHello"
      parameters:
      - in: "body"
        name: "person"
        required: false
        schema:
          $ref: "#/definitions/Person"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
  /sayHi:
    post:
      operationId: "sayHi"
      parameters:
      - in: "body"
        name: "name"
        required: false
        schema:
          $ref: "#/definitions/sayHiBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
definitions:
  sayHiBody:
    type: "object"
    properties:
      name:
        type: "string"
  Person:
    type: "object"
    properties:
      name:
        type: "string"
    x-java-class: "io.servicecomb.samples.chs.models.Person"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:130)
[2017-06-16 10:52:58,684/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]register schema chstest/chs/hello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:86)
[2017-06-16 10:52:58,904/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]add hostName:zhenghaibodembp,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:87)
[2017-06-16 10:52:58,906/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]add hostName:zhenghaibodeMBP,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:50)
[2017-06-16 10:52:58,907/CST][io.servicecomb.samples.chs.server.CHSServer.main()][WARN]address 0.0.0.0:7070?login=true, auto select a host address to publish 192.168.43.19:7070, maybe not the correct one io.servicecomb.serviceregistry.RegistryUtils.getPublishAddress(RegistryUtils.java:506)
[2017-06-16 10:52:59,256/CST][vert.x-eventloop-thread-0][INFO]highway listen success. address=0.0.0.0:7070 io.servicecomb.transport.highway.HighwayServerVerticle.lambda$startListen$0(HighwayServerVerticle.java:68)
[2017-06-16 10:52:59,258/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]endpoint to publish: highway://192.168.43.19:7070?login=true io.servicecomb.core.transport.TransportManager.init(TransportManager.java:52)
[2017-06-16 10:52:59,264/CST][vert.x-eventloop-thread-2][WARN]grpc listen address is not configured, will not listen. io.servicecomb.transport.grpc.GrpcVerticle.startListen(GrpcVerticle.java:63)
[2017-06-16 10:52:59,265/CST][io.servicecomb.samples.chs.server.CHSServer.main()][WARN]address 0.0.0.0:8080, auto select a host address to publish 192.168.43.19:8080, maybe not the correct one io.servicecomb.serviceregistry.RegistryUtils.getPublishAddress(RegistryUtils.java:506)
[2017-06-16 10:52:59,268/CST][vert.x-eventloop-thread-4][INFO]set uploads directory to null io.servicecomb.transport.rest.vertx.RestServerVerticle.init(RestServerVerticle.java:68)
[2017-06-16 10:52:59,286/CST][vert.x-eventloop-thread-4][INFO]rest listen success. address=0.0.0.0:8080 io.servicecomb.transport.rest.vertx.RestServerVerticle.lambda$startListen$0(RestServerVerticle.java:97)
[2017-06-16 10:52:59,287/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]endpoint to publish: rest://192.168.43.19:8080 io.servicecomb.core.transport.TransportManager.init(TransportManager.java:52)
[2017-06-16 10:52:59,287/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]on schema loaded, new schema. chs:hello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-16 10:52:59,295/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]It is running in the normal mode, a separated service registry is required io.servicecomb.serviceregistry.client.RegistryClientFactory.getRegistryClient(RegistryClientFactory.java:60)
[2017-06-16 10:52:59,417/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]Microservice exists in service center, no need to register. id=10 appId=chstest, name=chs, version=0.0.1 io.servicecomb.serviceregistry.RegistryUtils.regsiterMicroservice(RegistryUtils.java:311)
[2017-06-16 10:52:59,424/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]schemaId hello exists true io.servicecomb.serviceregistry.RegistryUtils.registerSchemas(RegistryUtils.java:293)
[2017-06-16 10:52:59,508/CST][io.servicecomb.samples.chs.server.CHSServer.main()][INFO]Register microservice instance success. microserviceId=10 instanceId=15 endpoints=[highway://192.168.43.19:7070?login=true, rest://192.168.43.19:8080] lease 120s io.servicecomb.serviceregistry.RegistryUtils.regsiterInstance(RegistryUtils.java:245)
[2017-06-16 10:52:59,537/CST][vert.x-eventloop-thread-2][INFO]watching microservice 10 successfully, the chosen service center address is 127.0.0.1:9980 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$watch$4(ServiceRegistryClientImpl.java:470)
[2017-06-16 10:53:07,234/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]Write merged log4j config file to /Users/zhenghaibo/git/samples/custom-handler-sample/target/classes/config/merged.log4j.properties io.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:98)
[2017-06-16 10:53:07,393/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4da2fe8e: startup date [Fri Jun 16 10:53:07 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2017-06-16 10:53:07,429/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/java-chassis-core/0.1.0-m1/java-chassis-core-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 10:53:07,735/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-config/0.1.0-m1/foundation-config-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 10:53:07,756/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-vertx/0.1.0-m1/foundation-vertx-0.1.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 10:53:07,772/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/foundation-common/0.1.0-m1/foundation-common-0.1.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 10:53:07,787/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]Loading XML bean definitions from URL [jar:file:/Users/zhenghaibo/.m2/repository/io/servicecomb/transport-rest-client/0.1.0-m1/transport-rest-client-0.1.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2017-06-16 10:53:07,953/CST][io.servicecomb.samples.chs.client.CHSClient.main()][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2017-06-16 10:53:07,954/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2017-06-16 10:53:08,017/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]config center URL is missing, skip to load configuration from config center io.servicecomb.config.ConfigurationSpringInitializer.<init>(ConfigurationSpringInitializer.java:80)
[2017-06-16 10:53:08,258/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2017-06-16 10:53:08,346/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-16 10:53:08,347/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]Found swagger generator context: io.servicecomb.swagger.generator.core.DefaultSwaggerGeneratorContext io.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:41)
[2017-06-16 10:53:08,822/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]generate swagger for chstest/chsClient/hello, swagger: ---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for io.servicecomb.samples.chs.server.HelloImpl"
  x-java-interface: "cse.gen.chstest.chsClient.hello.HelloImplIntf"
basePath: "/HelloImpl"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /sayHello:
    post:
      operationId: "sayHello"
      parameters:
      - in: "body"
        name: "person"
        required: false
        schema:
          $ref: "#/definitions/Person"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
  /sayHi:
    post:
      operationId: "sayHi"
      parameters:
      - in: "body"
        name: "name"
        required: false
        schema:
          $ref: "#/definitions/sayHiBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: "string"
definitions:
  Person:
    type: "object"
    properties:
      name:
        type: "string"
    x-java-class: "io.servicecomb.samples.chs.models.Person"
  sayHiBody:
    type: "object"
    properties:
      name:
        type: "string"
 io.servicecomb.core.definition.schema.ProducerSchemaFactory.createSchema(ProducerSchemaFactory.java:130)
[2017-06-16 10:53:08,823/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]register schema chstest/chsClient/hello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:86)
[2017-06-16 10:53:08,833/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]Found schema ids local, chstest:chs:[] io.servicecomb.core.definition.schema.ConsumerSchemaFactory.findLocalSchemas(ConsumerSchemaFactory.java:123)
[2017-06-16 10:53:08,835/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]It is running in the normal mode, a separated service registry is required io.servicecomb.serviceregistry.client.RegistryClientFactory.getRegistryClient(RegistryClientFactory.java:60)
[2017-06-16 10:53:09,123/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]add hostName:zhenghaibodembp,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:87)
[2017-06-16 10:53:09,125/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]add hostName:zhenghaibodeMBP,hostAddress:192.168.43.19 io.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:50)
[2017-06-16 10:53:09,513/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]Found schema ids from service center, chstest:chs:0.0.1:[hello] io.servicecomb.core.definition.schema.ConsumerSchemaFactory.findMicroservice(ConsumerSchemaFactory.java:148)
[2017-06-16 10:53:09,518/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]load schema from service center, microservice=chstest:chs:0.0.1, schemaId=hello, result=true io.servicecomb.core.definition.schema.ConsumerSchemaFactory.loadSwagger(ConsumerSchemaFactory.java:273)
[2017-06-16 10:53:09,555/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]register schema chstest/chs/hello io.servicecomb.core.definition.loader.SchemaLoader.registerSchema(SchemaLoader.java:86)
[2017-06-16 10:53:09,557/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]on schema loaded, new schema. chs:hello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-16 10:53:09,567/CST][vert.x-eventloop-thread-0][WARN]highway listen address is not configured, will not listen. io.servicecomb.transport.highway.HighwayServerVerticle.startListen(HighwayServerVerticle.java:59)
[2017-06-16 10:53:09,569/CST][vert.x-eventloop-thread-2][WARN]grpc listen address is not configured, will not listen. io.servicecomb.transport.grpc.GrpcVerticle.startListen(GrpcVerticle.java:63)
[2017-06-16 10:53:09,572/CST][vert.x-eventloop-thread-4][INFO]set uploads directory to null io.servicecomb.transport.rest.vertx.RestServerVerticle.init(RestServerVerticle.java:68)
[2017-06-16 10:53:09,572/CST][vert.x-eventloop-thread-4][WARN]rest listen address is not configured, will not start. io.servicecomb.transport.rest.vertx.RestServerVerticle.start(RestServerVerticle.java:77)
[2017-06-16 10:53:09,572/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]on schema loaded, new schema. chsClient:hello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:51)
[2017-06-16 10:53:09,573/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]on schema loaded, exists schema. chs:hello io.servicecomb.common.rest.RestEngineSchemaListener.onSchemaLoaded(RestEngineSchemaListener.java:46)
[2017-06-16 10:53:09,578/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]Microservice exists in service center, no need to register. id=11 appId=chstest, name=chsClient, version=0.0.1 io.servicecomb.serviceregistry.RegistryUtils.regsiterMicroservice(RegistryUtils.java:311)
[2017-06-16 10:53:09,580/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]schemaId hello exists true io.servicecomb.serviceregistry.RegistryUtils.registerSchemas(RegistryUtils.java:293)
[2017-06-16 10:53:09,651/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]Register microservice instance success. microserviceId=11 instanceId=16 endpoints=[] lease 120s io.servicecomb.serviceregistry.RegistryUtils.regsiterInstance(RegistryUtils.java:245)
[2017-06-16 10:53:09,687/CST][vert.x-eventloop-thread-2][INFO]watching microservice 11 successfully, the chosen service center address is 127.0.0.1:9980 io.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$watch$4(ServiceRegistryClientImpl.java:470)
[2017-06-16 10:53:09,796/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]Using loadbalance rule [com.netflix.loadbalancer.RoundRobinRule] for service [chs,]. io.servicecomb.loadbalance.LoadbalanceHandler.createLoadBalancer(LoadbalanceHandler.java:290)
[2017-06-16 10:53:09,941/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]find instances[1] from service center success. service=chstest/chs io.servicecomb.serviceregistry.RegistryUtils.findServiceInstance(RegistryUtils.java:387)
[2017-06-16 10:53:09,953/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]It's my handler! 
 io.servicecomb.samples.chs.handlers.MyHandler.handle(MyHandler.java:31)
[2017-06-16 10:53:10,043/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]connecting to address /192.168.43.19:7070 io.servicecomb.foundation.vertx.client.tcp.TcpClient.connect(TcpClient.java:107)
[2017-06-16 10:53:10,050/CST][vert.x-eventloop-thread-9][INFO]connect to address /192.168.43.19:7070 success io.servicecomb.foundation.vertx.client.tcp.TcpClient.onConnectSuccess(TcpClient.java:120)
[2017-06-16 10:53:10,054/CST][vert.x-eventloop-thread-9][INFO]try login to address /192.168.43.19:7070 io.servicecomb.foundation.vertx.client.tcp.TcpClient.tryLogin(TcpClient.java:171)
[2017-06-16 10:53:10,056/CST][vert.x-eventloop-thread-0][INFO]connect from 192.168.43.19:59422, in thread vert.x-eventloop-thread-0 io.servicecomb.foundation.vertx.server.TcpServerConnection.init(TcpServerConnection.java:36)
[2017-06-16 10:53:10,124/CST][vert.x-eventloop-thread-9][INFO]login success, address /192.168.43.19:7070 io.servicecomb.foundation.vertx.client.tcp.TcpClient.onLoginResponse(TcpClient.java:195)
[2017-06-16 10:53:10,125/CST][vert.x-eventloop-thread-9][INFO]writting cached buffer to address /192.168.43.19:7070 io.servicecomb.foundation.vertx.client.tcp.TcpClient.onLoginSuccess(TcpClient.java:201)
[2017-06-16 10:53:10,162/CST][io.servicecomb.samples.chs.client.CHSClient.main()][INFO]It's my handler! 
 io.servicecomb.samples.chs.handlers.MyHandler.handle(MyHandler.java:31)
[2017-06-16 10:53:35,391/CST][Thread-6][INFO]Closing org.springframework.context.support.ClassPathXmlApplicationContext@4da2fe8e: startup date [Fri Jun 16 10:53:07 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987)
[2017-06-16 10:53:35,391/CST][Thread-2][WARN]handler chain is shutting down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:82)
[2017-06-16 10:53:35,392/CST][Thread-2][WARN]handler chain is shut down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:93)
[2017-06-16 10:53:35,392/CST][Thread-6][WARN]cse is closing now... io.servicecomb.core.CseApplicationListener.onApplicationEvent(CseApplicationListener.java:115)
[2017-06-16 10:53:35,395/CST][Thread-6][INFO]Unregister microservice instance success. microserviceId=11 instanceId=16 io.servicecomb.serviceregistry.RegistryUtils.unregsiterInstance(RegistryUtils.java:269)
[2017-06-16 10:53:35,763/CST][vert.x-eventloop-thread-0][ERROR]disconected from 192.168.43.19:59422, in thread vert.x-eventloop-thread-0 io.servicecomb.foundation.vertx.server.TcpServerConnection.lambda$init$1(TcpServerConnection.java:46)
[2017-06-16 10:53:38,031/CST][Thread-6][INFO]Closing org.springframework.context.support.ClassPathXmlApplicationContext@519b49f9: startup date [Fri Jun 16 10:52:57 CST 2017]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987)
[2017-06-16 10:53:38,031/CST][Thread-2][WARN]handler chain is shutting down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:82)
[2017-06-16 10:53:38,032/CST][Thread-2][WARN]handler chain is shut down io.servicecomb.core.handler.ShutdownHookHandler.run(ShutdownHookHandler.java:93)
[2017-06-16 10:53:38,032/CST][Thread-6][WARN]cse is closing now... io.servicecomb.core.CseApplicationListener.onApplicationEvent(CseApplicationListener.java:115)
[2017-06-16 10:53:38,037/CST][Thread-6][INFO]Unregister microservice instance success. microserviceId=10 instanceId=15 io.servicecomb.serviceregistry.RegistryUtils.unregsiterInstance(RegistryUtils.java:269)
